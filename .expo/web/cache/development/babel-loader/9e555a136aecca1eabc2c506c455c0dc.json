{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\react-native\\\\Doctro\\\\screen\\\\Language.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ListItem } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport { connect } from 'react-redux';\nimport { changeLanguge } from \"../actions\";\nimport languages from \"../locales/Language.json\";\nimport I18n from \"../locales/i18n\";\n\nvar Language = function (_Component) {\n  _inherits(Language, _Component);\n\n  var _super = _createSuper(Language);\n\n  function Language() {\n    _classCallCheck(this, Language);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Language, [{\n    key: \"showRightIcon\",\n    value: function showRightIcon(lang) {\n      if (lang.locale === this.props.locale) {\n        return React.createElement(Ionicons, {\n          name: \"ios-checkmark-circle\",\n          type: \"ionicon\",\n          size: 25,\n          color: \"#6CDC17\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return React.createElement(Ionicons, {\n        name: \"ios-globe\",\n        type: \"ionicon\",\n        size: 25,\n        color: \"#888\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    key: \"onSelectLanguage\",\n    value: function onSelectLanguage(lang) {\n      this.props.changeLanguge(lang.locale);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          marginTop: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-arrow-back\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      })), React.createElement(Text, {\n        style: {\n          top: 23,\n          fontSize: 32,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, I18n.t('Languages')), React.createElement(View, {\n        style: {\n          backgroundColor: '#eee',\n          borderTopWidth: .5,\n          marginTop: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, languages.map(function (lang) {\n        return React.createElement(ListItem, {\n          key: lang.id,\n          title: lang.name,\n          rightIcon: _this.showRightIcon(lang),\n          style: {\n            marginBottom: 5,\n            borderRadius: 15,\n            alignItems: 'flex-end'\n          },\n          onPress: _this.onSelectLanguage.bind(_this, lang),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 41\n          }\n        });\n      }), React.createElement(ListItem, {\n        title: I18n.t('Settings'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Language;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var i18n = _ref.i18n;\n  return {\n    locale: i18n.locale\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeLanguge: changeLanguge\n})(Language);","map":{"version":3,"sources":["E:/react-native/Doctro/screen/Language.js"],"names":["React","Component","ListItem","Ionicons","connect","changeLanguge","languages","I18n","Language","lang","locale","props","styles","container","marginHorizontal","marginTop","navigation","goBack","top","fontSize","fontWeight","t","backgroundColor","borderTopWidth","map","id","name","showRightIcon","marginBottom","borderRadius","alignItems","onSelectLanguage","bind","StyleSheet","create","flex","mapStateToProps","i18n"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity} from 'react-native';\r\nimport { ListItem } from 'react-native-elements';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeLanguge } from '../actions';\r\nimport languages from '../locales/Language.json';\r\nimport I18n from '../locales/i18n';\r\n\r\n\r\n\r\n// create a component\r\nclass Language extends Component {\r\n    \r\n    showRightIcon(lang) {\r\n\r\n        if(lang.locale === this.props.locale) {\r\n            return <Ionicons name='ios-checkmark-circle' type='ionicon' size={25} color='#6CDC17' />\r\n        }\r\n        return <Ionicons name='ios-globe' type='ionicon' size={25} color='#888' />\r\n    }\r\n\r\n    onSelectLanguage(lang) {\r\n        this.props.changeLanguge(lang.locale)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={{ marginHorizontal: 15, marginTop: 40 }}>\r\n                    <TouchableOpacity onPress={()=> this.props.navigation.goBack()}>\r\n                        <Ionicons name='ios-arrow-back' size={30} />\r\n                    </TouchableOpacity>\r\n\r\n                    <Text style={{ top: 23, fontSize: 32, fontWeight: 'bold' }}>{I18n.t('Languages')}</Text>\r\n\r\n                    <View style={{ backgroundColor: '#eee', borderTopWidth: .5, marginTop: 50 }}>\r\n                        {\r\n                            languages.map((lang) => {\r\n                                return (\r\n                                        <ListItem\r\n                                            key={lang.id}\r\n                                            title={lang.name}\r\n                                            rightIcon={this.showRightIcon(lang)}\r\n                                            style={{ marginBottom: 5, borderRadius: 15, alignItems: 'flex-end' }}\r\n                                            onPress={this.onSelectLanguage.bind(this, lang)}\r\n                                        />\r\n                                   \r\n                                )\r\n                            })\r\n                        }\r\n                        <ListItem \r\n                            title={I18n.t('Settings')}\r\n                        />\r\n\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff'\r\n    },\r\n});\r\n\r\n\r\nconst mapStateToProps = ({i18n}) => {\r\n    return {\r\n        locale: i18n.locale\r\n    }\r\n}\r\n\r\n//make this component available to the app\r\nexport default connect ( mapStateToProps ,{changeLanguge})(Language);\r\n"]},"metadata":{},"sourceType":"module"}