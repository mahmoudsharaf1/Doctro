{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\react-native\\\\Doctro\\\\screen\\\\ChatScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icon, Divider, Avatar } from 'react-native-elements';\nimport firebase from \"../Firebase\";\n\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (key) {\n      return function (val) {\n        _this.setState(_defineProperty({}, key, val));\n      };\n    };\n\n    _this.sendMessage = function _callee() {\n      var _this$state, person, profile, textMessags, msgId, updates, message;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, person = _this$state.person, profile = _this$state.profile, textMessags = _this$state.textMessags;\n\n              if (_this.state.textMessags.length > 0) {\n                msgId = firebase.database().ref('messages').child(person.uid).child(profile.uid).push().key;\n                updates = {};\n                message = {\n                  message: textMessags,\n                  time: firebase.database.ServerValue.TIMESTAMP,\n                  from: profile.uid\n                };\n                updates['messages/' + profile.uid + '/' + person.uid + '/' + person.displayName + msgId] = message;\n                updates['messages/' + person.uid + '/' + profile.uid + '/' + profile.displayName + msgId] = message;\n                firebase.database().ref().update(updates);\n\n                _this.setState({\n                  textMessags: ''\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.convertTime = function (time) {\n      var d = new Date(time);\n      var c = new Date();\n      var result = (d.getHours() < 10 ? '0' : '') + d.getHours() + ':';\n      result += (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();\n      return result;\n    };\n\n    _this.renderRow = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          maxWidth: '60%',\n          alignSelf: item.from === _this.state.profile.uid ? 'flex-end' : 'flex-start',\n          backgroundColor: item.from === _this.state.profile.uid ? '#1590f9' : '#eee',\n          borderRadius: 15,\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: item.from === _this.state.profile.uid ? '#fff' : '#000',\n          padding: 7,\n          fontSize: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, \"  \", item.message, \"  \")), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'gray',\n          fontSize: 10,\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, _this.convertTime(item.time), \"  \")));\n    };\n\n    _this.state = {\n      person: _this.props.navigation.getParam('chat'),\n      profile: _this.props.navigation.getParam('user'),\n      textMessags: '',\n      messageList: [],\n      dbRef: firebase.database().ref('users')\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      firebase.database().ref('messages').child(this.state.profile.uid).child(this.state.person.uid).on('child_added', function (value) {\n        _this2.setState(function (prevState) {\n          return {\n            messageList: [].concat(_toConsumableArray(prevState.messageList), [value.val()])\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _Dimensions$get = Dimensions.get('window'),\n          height = _Dimensions$get.height;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          flex: 1,\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: '#fff',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginTop: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-left\",\n        type: \"fontawesom\",\n        size: 40,\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, React.createElement(Avatar, {\n        size: 30,\n        rounded: true,\n        source: {\n          uri: this.state.person.photoURL\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      }, this.state.person.displayName))), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          marginRight: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-videocam\",\n        type: \"ionicon\",\n        size: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      })), React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-call\",\n        type: \"ionicon\",\n        size: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 33\n        }\n      })))), React.createElement(Divider, {\n        style: {\n          marginBottom: 10,\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }), React.createElement(SafeAreaView, {\n        style: styles.messageList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, React.createElement(FlatList, {\n        ref: function ref(_ref2) {\n          return _this3.flatList = _ref2;\n        },\n        onContentSizeChange: function onContentSizeChange() {\n          return _this3.flatList.scrollToEnd({\n            animated: true\n          });\n        },\n        onLayout: function onLayout() {\n          return _this3.flatList.scrollToEnd({\n            animated: true\n          });\n        },\n        style: {\n          padding: 10,\n          height: height * 0.8\n        },\n        data: this.state.messageList,\n        renderItem: this.renderRow,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \" Type message...\",\n        placeholderTextColor: \"#888\",\n        value: this.state.textMessags,\n        onChangeText: this.handleChange('textMessags'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.sendMessage,\n        style: styles.btnSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-paper-plane\",\n        type: \"ionicon\",\n        color: \"#1590f0\",\n        size: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }\n      }))))));\n    }\n  }]);\n\n  return ChatScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  messageList: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  input: {\n    padding: 5,\n    borderWidth: 1,\n    borderColor: '#CCC',\n    width: '85%',\n    marginBottom: 10,\n    borderRadius: 10,\n    marginRight: 7,\n    backgroundColor: '#eeef'\n  },\n  btnSend: {\n    marginBottom: 10,\n    marginLeft: 5,\n    borderRadius: 20\n  }\n});\nexport default ChatScreen;","map":{"version":3,"sources":["E:/react-native/Doctro/screen/ChatScreen.js"],"names":["React","Component","Icon","Divider","Avatar","firebase","ChatScreen","props","handleChange","key","val","setState","sendMessage","state","person","profile","textMessags","length","msgId","database","ref","child","uid","push","updates","message","time","ServerValue","TIMESTAMP","from","displayName","update","convertTime","d","Date","c","result","getHours","getMinutes","renderRow","item","flexDirection","maxWidth","alignSelf","backgroundColor","borderRadius","marginTop","color","padding","fontSize","textAlign","navigation","getParam","messageList","dbRef","on","value","prevState","Dimensions","get","height","styles","container","marginHorizontal","flex","alignItems","justifyContent","goBack","uri","photoURL","fontWeight","marginLeft","marginRight","marginBottom","flatList","scrollToEnd","animated","index","toString","input","btnSend","StyleSheet","create","borderWidth","borderColor","width"],"mappings":";;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;AAEA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,uBAAtC;AAEA,OAAOC,QAAP;;IAEMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAuBnBC,YAvBmB,GAuBJ,UAAAC,GAAG;AAAA,aAAI,UAAAC,GAAG,EAAI;AACzB,cAAKC,QAAL,qBAAiBF,GAAjB,EAAuBC,GAAvB;AACH,OAFiB;AAAA,KAvBC;;AAAA,UA2BnBE,WA3BmB,GA2BL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAC+B,MAAKC,KADpC,EACFC,MADE,eACFA,MADE,EACMC,OADN,eACMA,OADN,EACeC,WADf,eACeA,WADf;;AAGV,kBAAI,MAAKH,KAAL,CAAWG,WAAX,CAAuBC,MAAvB,GAAgC,CAApC,EAAuC;AAC/BC,gBAAAA,KAD+B,GACvBb,QAAQ,CAACc,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CP,MAAM,CAACQ,GAAjD,EAAsDD,KAAtD,CAA4DN,OAAO,CAACO,GAApE,EAAyEC,IAAzE,GAAgFd,GADzD;AAE/Be,gBAAAA,OAF+B,GAErB,EAFqB;AAG/BC,gBAAAA,OAH+B,GAGrB;AACVA,kBAAAA,OAAO,EAAET,WADC;AAEVU,kBAAAA,IAAI,EAAErB,QAAQ,CAACc,QAAT,CAAkBQ,WAAlB,CAA8BC,SAF1B;AAGVC,kBAAAA,IAAI,EAAEd,OAAO,CAACO;AAHJ,iBAHqB;AAQnCE,gBAAAA,OAAO,CAAC,cAAcT,OAAO,CAACO,GAAtB,GAA4B,GAA5B,GAAkCR,MAAM,CAACQ,GAAzC,GAA+C,GAA/C,GAAqDR,MAAM,CAACgB,WAA5D,GAA0EZ,KAA3E,CAAP,GAA2FO,OAA3F;AACAD,gBAAAA,OAAO,CAAC,cAAcV,MAAM,CAACQ,GAArB,GAA2B,GAA3B,GAAiCP,OAAO,CAACO,GAAzC,GAA+C,GAA/C,GAAqDP,OAAO,CAACe,WAA7D,GAA2EZ,KAA5E,CAAP,GAA4FO,OAA5F;AACApB,gBAAAA,QAAQ,CAACc,QAAT,GAAoBC,GAApB,GAA0BW,MAA1B,CAAiCP,OAAjC;;AACA,sBAAKb,QAAL,CAAc;AAAEK,kBAAAA,WAAW,EAAE;AAAf,iBAAd;AACH;;AAfS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA3BK;;AAAA,UA6CnBgB,WA7CmB,GA6CL,UAACN,IAAD,EAAU;AACpB,UAAIO,CAAC,GAAG,IAAIC,IAAJ,CAASR,IAAT,CAAR;AACA,UAAIS,CAAC,GAAG,IAAID,IAAJ,EAAR;AACA,UAAIE,MAAM,GAAG,CAACH,CAAC,CAACI,QAAF,KAAe,EAAf,GAAoB,GAApB,GAA0B,EAA3B,IAAiCJ,CAAC,CAACI,QAAF,EAAjC,GAAgD,GAA7D;AACAD,MAAAA,MAAM,IAAI,CAACH,CAAC,CAACK,UAAF,KAAiB,EAAjB,GAAsB,GAAtB,GAA4B,EAA7B,IAAmCL,CAAC,CAACK,UAAF,EAA7C;AAOA,aAAOF,MAAP;AACH,KAzDkB;;AAAA,UA2DnBG,SA3DmB,GA2DP,gBAAc;AAAA,UAAXC,IAAW,QAAXA,IAAW;AACtB,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,aAAa,EAAE,KADZ;AAEHC,UAAAA,QAAQ,EAAE,KAFP;AAGHC,UAAAA,SAAS,EAAEH,IAAI,CAACX,IAAL,KAAc,MAAKhB,KAAL,CAAWE,OAAX,CAAmBO,GAAjC,GAAuC,UAAvC,GAAoD,YAH5D;AAIHsB,UAAAA,eAAe,EAAEJ,IAAI,CAACX,IAAL,KAAc,MAAKhB,KAAL,CAAWE,OAAX,CAAmBO,GAAjC,GAAuC,SAAvC,GAAmD,MAJjE;AAKHuB,UAAAA,YAAY,EAAE,EALX;AAMHC,UAAAA,SAAS,EAAE;AANR,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAEP,IAAI,CAACX,IAAL,KAAc,MAAKhB,KAAL,CAAWE,OAAX,CAAmBO,GAAjC,GAAuC,MAAvC,GAAgD,MAAzD;AAAiE0B,UAAAA,OAAO,EAAE,CAA1E;AAA6EC,UAAAA,QAAQ,EAAE;AAAvF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA6GT,IAAI,CAACf,OAAlH,OAVJ,CADJ,EAaI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEsB,UAAAA,KAAK,EAAE,MAAT;AAAiBE,UAAAA,QAAQ,EAAE,EAA3B;AAA+BC,UAAAA,SAAS,EAAE;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmE,MAAKlB,WAAL,CAAiBQ,IAAI,CAACd,IAAtB,CAAnE,OADJ,CAbJ,CADJ;AAmBH,KA/EkB;;AAEf,UAAKb,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,MAAKP,KAAL,CAAW4C,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,CADC;AAETrC,MAAAA,OAAO,EAAE,MAAKR,KAAL,CAAW4C,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,CAFA;AAGTpC,MAAAA,WAAW,EAAE,EAHJ;AAITqC,MAAAA,WAAW,EAAE,EAJJ;AAKTC,MAAAA,KAAK,EAAEjD,QAAQ,CAACc,QAAT,GAAoBC,GAApB,CAAwB,OAAxB;AALE,KAAb;AAFe;AASlB;;;;yCAEoB;AAAA;;AAEjBf,MAAAA,QAAQ,CAACc,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,EAAoCC,KAApC,CAA0C,KAAKR,KAAL,CAAWE,OAAX,CAAmBO,GAA7D,EAAkED,KAAlE,CAAwE,KAAKR,KAAL,CAAWC,MAAX,CAAkBQ,GAA1F,EACKiC,EADL,CACQ,aADR,EACuB,UAACC,KAAD,EAAW;AAC1B,QAAA,MAAI,CAAC7C,QAAL,CAAc,UAAC8C,SAAD,EAAe;AACzB,iBAAO;AACHJ,YAAAA,WAAW,+BAAMI,SAAS,CAACJ,WAAhB,IAA6BG,KAAK,CAAC9C,GAAN,EAA7B;AADR,WAAP;AAGH,SAJD;AAKH,OAPL;AAQH;;;6BA4DQ;AAAA;;AAAA,4BACYgD,UAAU,CAACC,GAAX,CAAe,QAAf,CADZ;AAAA,UACCC,MADD,mBACCA,MADD;;AAEL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,gBAAgB,EAAE,EADf;AAEHC,UAAAA,IAAI,EAAE,CAFH;AAGHlB,UAAAA,SAAS,EAAE;AAHR,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHF,UAAAA,eAAe,EAAE,MADd;AAEHH,UAAAA,aAAa,EAAE,KAFZ;AAGHwB,UAAAA,UAAU,EAAE,QAHT;AAIHC,UAAAA,cAAc,EAAE,eAJb;AAKHpB,UAAAA,SAAS,EAAE;AALR,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEL,UAAAA,aAAa,EAAE,KAAjB;AAAwBwB,UAAAA,UAAU,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,IAAI,EAAC,YAA/B;AAA4C,QAAA,IAAI,EAAE,EAAlD;AAAsD,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC1D,KAAL,CAAW4C,UAAX,CAAsBgB,MAAtB,EAAN;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAKI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAE1B,UAAAA,aAAa,EAAE,KAAjB;AAAwBwB,UAAAA,UAAU,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACI,QAAA,IAAI,EAAE,EADV;AAEI,QAAA,OAAO,MAFX;AAGI,QAAA,MAAM,EAAE;AAAEG,UAAAA,GAAG,EAAE,KAAKvD,KAAL,CAAWC,MAAX,CAAkBuD;AAAzB,SAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,UAAU,EAAE;AAAlC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqD,KAAK1D,KAAL,CAAWC,MAAX,CAAkBgB,WAAvE,CAPJ,CALJ,CATJ,EAyBI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEW,UAAAA,aAAa,EAAE;AAAjB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE;AAAE+B,UAAAA,WAAW,EAAE;AAAf,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,IAAI,EAAC,SAA/B;AAAyC,QAAA,IAAI,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,IAAI,EAAC,SAA3B;AAAqC,QAAA,IAAI,EAAE,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,CAzBJ,CAPJ,EAyCI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE,EAAhB;AAAoB3B,UAAAA,SAAS,EAAE;AAA/B,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzCJ,EA4CI,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAEe,MAAM,CAACR,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,QAAD;AACI,QAAA,GAAG,EAAE,aAAAjC,KAAG;AAAA,iBAAI,MAAI,CAACsD,QAAL,GAAgBtD,KAApB;AAAA,SADZ;AAEI,QAAA,mBAAmB,EAAE;AAAA,iBAAM,MAAI,CAACsD,QAAL,CAAcC,WAAd,CAA0B;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAA1B,CAAN;AAAA,SAFzB;AAGI,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACF,QAAL,CAAcC,WAAd,CAA0B;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAA1B,CAAN;AAAA,SAHd;AAII,QAAA,KAAK,EAAE;AAAE5B,UAAAA,OAAO,EAAE,EAAX;AAAeY,UAAAA,MAAM,EAAEA,MAAM,GAAG;AAAhC,SAJX;AAKI,QAAA,IAAI,EAAE,KAAK/C,KAAL,CAAWwC,WALrB;AAMI,QAAA,UAAU,EAAE,KAAKd,SANrB;AAOI,QAAA,YAAY,EAAE,sBAACC,IAAD,EAAOqC,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAYI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAErC,UAAAA,aAAa,EAAE,KAAjB;AAAwBwB,UAAAA,UAAU,EAAE;AAApC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEJ,MAAM,CAACkB,KADlB;AAEI,QAAA,WAAW,EAAC,kBAFhB;AAGI,QAAA,oBAAoB,EAAC,MAHzB;AAII,QAAA,KAAK,EAAE,KAAKlE,KAAL,CAAWG,WAJtB;AAKI,QAAA,YAAY,EAAE,KAAKR,YAAL,CAAkB,aAAlB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAUI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,KAAKI,WAAhC;AACI,QAAA,KAAK,EAAEiD,MAAM,CAACmB,OADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AACI,QAAA,IAAI,EAAC,iBADT;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,KAAK,EAAC,SAHV;AAII,QAAA,IAAI,EAAE,EAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAVJ,CAZJ,CA5CJ,CADJ,CADJ;AAqFH;;;;EA1KoB/E,S;;AA8KzB,IAAM4D,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AAC7BpB,EAAAA,SAAS,EAAE;AACPE,IAAAA,IAAI,EAAE,CADC;AAEPpB,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BS,EAAAA,WAAW,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETpB,IAAAA,eAAe,EAAE;AAFR,GALgB;AAS7BmC,EAAAA,KAAK,EAAE;AACH/B,IAAAA,OAAO,EAAE,CADN;AAEHmC,IAAAA,WAAW,EAAE,CAFV;AAGHC,IAAAA,WAAW,EAAE,MAHV;AAIHC,IAAAA,KAAK,EAAE,KAJJ;AAKHZ,IAAAA,YAAY,EAAE,EALX;AAMH5B,IAAAA,YAAY,EAAE,EANX;AAOH2B,IAAAA,WAAW,EAAE,CAPV;AAQH5B,IAAAA,eAAe,EAAE;AARd,GATsB;AAmB7BoC,EAAAA,OAAO,EAAE;AACLP,IAAAA,YAAY,EAAE,EADT;AAELF,IAAAA,UAAU,EAAE,CAFP;AAGL1B,IAAAA,YAAY,EAAE;AAHT;AAnBoB,CAAlB,CAAf;AA2BA,eAAevC,UAAf","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, SafeAreaView, TextInput, FlatList, Dimensions } from 'react-native';\r\nimport { Icon, Divider, Avatar } from 'react-native-elements';\r\n\r\nimport firebase from '../Firebase';\r\n// create a component\r\nclass ChatScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            person: this.props.navigation.getParam('chat'),\r\n            profile: this.props.navigation.getParam('user'),\r\n            textMessags: '',\r\n            messageList: [],\r\n            dbRef: firebase.database().ref('users')\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        \r\n        firebase.database().ref('messages').child(this.state.profile.uid).child(this.state.person.uid)\r\n            .on('child_added', (value) => {\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        messageList: [...prevState.messageList, value.val()]\r\n                    }\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange = key => val => {\r\n        this.setState({ [key]: val })\r\n    }\r\n\r\n    sendMessage = async () => {\r\n        const { person, profile, textMessags } = this.state;\r\n\r\n        if (this.state.textMessags.length > 0) {\r\n            let msgId = firebase.database().ref('messages').child(person.uid).child(profile.uid).push().key;\r\n            let updates = {};\r\n            let message = {\r\n                message: textMessags,\r\n                time: firebase.database.ServerValue.TIMESTAMP,\r\n                from: profile.uid\r\n            }\r\n            updates['messages/' + profile.uid + '/' + person.uid + '/' + person.displayName + msgId] = message\r\n            updates['messages/' + person.uid + '/' + profile.uid + '/' + profile.displayName + msgId] = message\r\n            firebase.database().ref().update(updates)\r\n            this.setState({ textMessags: '' })\r\n        }\r\n    }\r\n\r\n    convertTime = (time) => {\r\n        let d = new Date(time);\r\n        let c = new Date();\r\n        let result = (d.getHours() < 10 ? '0' : '') + d.getHours() + ':';\r\n        result += (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();\r\n\r\n        // get Month and Day\r\n\r\n        // if(c.getDay !== d.getDay()) {\r\n        //     result = d.getDay() + ' ' + d.getMonth() + ' ' + result     \r\n        // }\r\n        return result;\r\n    }\r\n\r\n    renderRow = ({ item }) => {\r\n        return (\r\n            <View>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        maxWidth: '60%',\r\n                        alignSelf: item.from === this.state.profile.uid ? 'flex-end' : 'flex-start',\r\n                        backgroundColor: item.from === this.state.profile.uid ? '#1590f9' : '#eee',\r\n                        borderRadius: 15,\r\n                        marginTop: 10,\r\n                    }}\r\n                >\r\n                    <Text style={{ color: item.from === this.state.profile.uid ? '#fff' : '#000', padding: 7, fontSize: 16 }}>  {item.message}  </Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={{ color: 'gray', fontSize: 10, textAlign: 'right' }}>{this.convertTime(item.time)}  </Text>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let { height } = Dimensions.get('window');\r\n        return (\r\n            <View style={styles.container}>\r\n                <View\r\n                    style={{\r\n                        marginHorizontal: 15,\r\n                        flex: 1,\r\n                        marginTop: 30\r\n                    }}>\r\n\r\n                    <View\r\n                        style={{\r\n                            backgroundColor: '#fff',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'space-between',\r\n                            marginTop: 15\r\n                        }}>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                            <TouchableOpacity>\r\n                                <Icon name='chevron-left' type='fontawesom' size={40} onPress={() => this.props.navigation.goBack()} />\r\n                            </TouchableOpacity>\r\n\r\n                            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                                <Avatar\r\n                                    size={30}\r\n                                    rounded\r\n                                    source={{ uri: this.state.person.photoURL }}\r\n\r\n                                />\r\n                                <Text style={{ fontWeight: 'bold', marginLeft: 5 }}>{this.state.person.displayName}</Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            <TouchableOpacity style={{ marginRight: 15 }} >\r\n                                <Icon name='ios-videocam' type='ionicon' size={23} />\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity>\r\n                                <Icon name='ios-call' type='ionicon' size={23} />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <Divider style={{ marginBottom: 10, marginTop: 5 }} />\r\n\r\n\r\n                    <SafeAreaView style={styles.messageList}>\r\n\r\n                        <FlatList\r\n                            ref={ref => this.flatList = ref}\r\n                            onContentSizeChange={() => this.flatList.scrollToEnd({ animated: true })}\r\n                            onLayout={() => this.flatList.scrollToEnd({ animated: true })}\r\n                            style={{ padding: 10, height: height * 0.8 }}\r\n                            data={this.state.messageList}\r\n                            renderItem={this.renderRow}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                        />\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n\r\n                            <TextInput\r\n                                style={styles.input}\r\n                                placeholder=' Type message...'\r\n                                placeholderTextColor='#888'\r\n                                value={this.state.textMessags}\r\n                                onChangeText={this.handleChange('textMessags')}\r\n                            />\r\n\r\n                            <TouchableOpacity onPress={this.sendMessage}\r\n                                style={styles.btnSend}>\r\n                                <Icon\r\n                                    name='ios-paper-plane'\r\n                                    type='ionicon'\r\n                                    color='#1590f0'\r\n                                    size={40}\r\n                                />\r\n                            </TouchableOpacity>\r\n\r\n                        </View>\r\n\r\n                    </SafeAreaView>\r\n\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n    },\r\n    messageList: {\r\n        flex: 1,\r\n        backgroundColor: '#fff'\r\n    },\r\n    input: {\r\n        padding: 5,\r\n        borderWidth: 1,\r\n        borderColor: '#CCC',\r\n        width: '85%',\r\n        marginBottom: 10,\r\n        borderRadius: 10,\r\n        marginRight: 7,\r\n        backgroundColor: '#eeef'\r\n    },\r\n    btnSend: {\r\n        marginBottom: 10,\r\n        marginLeft: 5,\r\n        borderRadius: 20\r\n    }\r\n});\r\n\r\n//make this component available to the app\r\nexport default ChatScreen;\r\n"]},"metadata":{},"sourceType":"module"}