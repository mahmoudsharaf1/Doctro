{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ORGANIZE_ATTEMPING, ORGANIZE_SUCCESS, ORGANIZE_FAILED } from \"../actions/type\";\nvar INITAL_STATE = {\n  saving: false,\n  saved: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ORGANIZE_ATTEMPING:\n      return _objectSpread(_objectSpread({}, INITAL_STATE), {}, {\n        saving: true\n      });\n\n    case ORGANIZE_SUCCESS:\n      return {\n        saved: true,\n        saving: false\n      };\n\n    case ORGANIZE_FAILED:\n      return {\n        saved: false,\n        saving: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["E:/react-native/Doctro/reducer/organize_reducer.js"],"names":["ORGANIZE_ATTEMPING","ORGANIZE_SUCCESS","ORGANIZE_FAILED","INITAL_STATE","saving","saved","state","action","type"],"mappings":";;;;;;AAAA,SACIA,kBADJ,EAEIC,gBAFJ,EAGIC,eAHJ;AAOA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAArB;AAGA,gBAAe,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,kBAAL;AACI,6CAAYG,YAAZ;AAA0BC,QAAAA,MAAM,EAAE;AAAlC;;AACJ,SAAKH,gBAAL;AACI,aAAO;AAAEI,QAAAA,KAAK,EAAE,IAAT;AAAeD,QAAAA,MAAM,EAAE;AAAvB,OAAP;;AACJ,SAAKF,eAAL;AACI,aAAO;AAAEG,QAAAA,KAAK,EAAE,KAAT;AAAgBD,QAAAA,MAAM,EAAE;AAAxB,OAAP;;AACJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXD","sourcesContent":["import {\r\n    ORGANIZE_ATTEMPING, \r\n    ORGANIZE_SUCCESS, \r\n    ORGANIZE_FAILED\r\n} from '../actions/type';\r\n\r\n\r\nconst INITAL_STATE = { saving: false, saved: false };\r\n\r\n\r\nexport default (state = INITAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case ORGANIZE_ATTEMPING:\r\n            return { ...INITAL_STATE, saving: true};\r\n        case ORGANIZE_SUCCESS:\r\n            return { saved: true, saving: false};\r\n        case ORGANIZE_FAILED:\r\n            return { saved: false, saving: false};\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}