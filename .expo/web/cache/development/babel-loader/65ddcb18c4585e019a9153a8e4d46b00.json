{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport firebase from \"../Firebase\";\nimport { SIGNIN_ATTEMPING, SIGNIN_SUCCESS, SIGNUP_FAILED } from \"./type\";\nexport var handelSignUpDoctor = function handelSignUpDoctor(_ref) {\n  var displayName = _ref.displayName,\n      email = _ref.email,\n      password = _ref.password,\n      phone = _ref.phone,\n      photoURL = _ref.photoURL,\n      medicalSchool = _ref.medicalSchool,\n      education = _ref.education,\n      specialty = _ref.specialty,\n      hourlyRate = _ref.hourlyRate,\n      address = _ref.address,\n      experience = _ref.experience,\n      addressSchool = _ref.addressSchool,\n      awards = _ref.awards,\n      location = _ref.location;\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              dispatch({\n                type: SIGNIN_ATTEMPING\n              });\n              firebase.auth().createUserWithEmailAndPassword(email, password).then(function (resp) {\n                firebase.database().ref('users/profiles/' + resp.user.uid).set({\n                  displayName: displayName,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                  photoURL: photoURL,\n                  medicalSchool: medicalSchool,\n                  education: education,\n                  specialty: specialty,\n                  hourlyRate: hourlyRate,\n                  address: address,\n                  experience: experience,\n                  addressSchool: addressSchool,\n                  awards: awards,\n                  location: location,\n                  uid: resp.user.uid,\n                  type: 'vendor'\n                }).then(function (response) {\n                  AsyncStorage.setItem('uid', resp.user.uid);\n                  dispatch({\n                    type: SIGNIN_SUCCESS,\n                    payload: {\n                      displayName: displayName,\n                      email: email,\n                      password: password,\n                      phone: phone,\n                      photoURL: photoURL,\n                      medicalSchool: medicalSchool,\n                      education: education,\n                      specialty: specialty,\n                      hourlyRate: hourlyRate,\n                      address: address,\n                      experience: experience,\n                      addressSchool: addressSchool,\n                      awards: awards,\n                      location: location,\n                      uid: resp.user.uid,\n                      type: 'vendor'\n                    },\n                    payload2: null\n                  });\n                });\n                firebase.database().ref('specialty/' + specialty + '/' + resp.user.uid).set({\n                  displayName: displayName,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                  photoURL: photoURL,\n                  medicalSchool: medicalSchool,\n                  education: education,\n                  specialty: specialty,\n                  hourlyRate: hourlyRate,\n                  address: address,\n                  experience: experience,\n                  addressSchool: addressSchool,\n                  awards: awards,\n                  location: location,\n                  uid: resp.user.uid\n                });\n              }).catch(function (error) {\n                dispatch({\n                  type: SIGNUP_FAILED,\n                  payload: error.message\n                });\n              });\n            } catch (err) {\n              console.log(err);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["G:/react-native/Doctro/actions/authDoctors.js"],"names":["firebase","SIGNIN_ATTEMPING","SIGNIN_SUCCESS","SIGNUP_FAILED","handelSignUpDoctor","displayName","email","password","phone","photoURL","medicalSchool","education","specialty","hourlyRate","address","experience","addressSchool","awards","location","dispatch","type","auth","createUserWithEmailAndPassword","then","resp","database","ref","user","uid","set","response","AsyncStorage","setItem","payload","payload2","catch","error","message","err","console","log"],"mappings":"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","sourcesContent":["import { AsyncStorage } from 'react-native';\r\nimport firebase from '../Firebase';\r\n\r\nimport {\r\n    SIGNIN_ATTEMPING,\r\n    SIGNIN_SUCCESS,\r\n    SIGNUP_FAILED,\r\n} from './type';\r\n\r\n\r\n\r\nexport const handelSignUpDoctor = ({\r\n    displayName,\r\n    email,\r\n    password,\r\n    phone,\r\n    photoURL,\r\n    medicalSchool,\r\n    education,\r\n    specialty,\r\n    hourlyRate,\r\n    address,\r\n    experience,\r\n    addressSchool,\r\n    awards,\r\n    location\r\n}) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: SIGNIN_ATTEMPING })\r\n\r\n            firebase.auth().createUserWithEmailAndPassword(email, password).then(resp => {\r\n\r\n\r\n                firebase.database().ref('users/profiles/' + resp.user.uid).set({\r\n                    displayName,\r\n                    email,\r\n                    password,\r\n                    phone,\r\n                    photoURL,\r\n                    medicalSchool,\r\n                    education,\r\n                    specialty,\r\n                    hourlyRate,\r\n                    address,\r\n                    experience,\r\n                    addressSchool,\r\n                    awards,\r\n                    location,\r\n                    uid: resp.user.uid,\r\n                    type: 'vendor'\r\n                })\r\n                    .then((response) => {\r\n                        AsyncStorage.setItem('uid', resp.user.uid);\r\n                        // AsyncStorage.setItem('type', 'vendor');\r\n\r\n                        dispatch({\r\n                            type: SIGNIN_SUCCESS, payload: {\r\n                                displayName,\r\n                                email,\r\n                                password,\r\n                                phone,\r\n                                photoURL,\r\n                                medicalSchool,\r\n                                education,\r\n                                specialty,\r\n                                hourlyRate,\r\n                                address,\r\n                                experience,\r\n                                addressSchool,\r\n                                awards,\r\n                                location,\r\n                                uid: resp.user.uid,\r\n                                type: 'vendor'\r\n                            }, payload2: null\r\n                        })\r\n                    })\r\n\r\n\r\n                firebase.database().ref('specialty/' + specialty + '/' + resp.user.uid).set({\r\n                    displayName,\r\n                    email,\r\n                    password,\r\n                    phone,\r\n                    photoURL,\r\n                    medicalSchool,\r\n                    education,\r\n                    specialty,\r\n                    hourlyRate,\r\n                    address,\r\n                    experience,\r\n                    addressSchool,\r\n                    awards,\r\n                    location,\r\n                    uid: resp.user.uid\r\n                })\r\n\r\n            }).catch(error => {\r\n                dispatch({ type: SIGNUP_FAILED, payload: error.message })\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}