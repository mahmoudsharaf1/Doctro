{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"G:\\\\react-native\\\\Doctro\\\\src\\\\IntlPhoneInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PropTypes from 'prop-types';\nimport data from \"./Countries\";\n\nvar IntlPhoneInput = function (_React$Component) {\n  _inherits(IntlPhoneInput, _React$Component);\n\n  var _super = _createSuper(IntlPhoneInput);\n\n  function IntlPhoneInput(props) {\n    var _this;\n\n    _classCallCheck(this, IntlPhoneInput);\n\n    _this = _super.call(this, props);\n\n    _this.onChangePropText = function (unmaskedPhoneNumber, phoneNumber) {\n      var _this$state = _this.state,\n          dialCode = _this$state.dialCode,\n          mask = _this$state.mask;\n      var countOfNumber = mask.match(/9/g).length;\n\n      if (_this.props.onChangeText) {\n        var isVerified = countOfNumber === (unmaskedPhoneNumber == null ? void 0 : unmaskedPhoneNumber.length) && (phoneNumber == null ? void 0 : phoneNumber.length) > 0;\n\n        _this.props.onChangeText({\n          dialCode: dialCode,\n          unmaskedPhoneNumber: unmaskedPhoneNumber,\n          phoneNumber: phoneNumber,\n          isVerified: isVerified\n        });\n      }\n    };\n\n    _this.onChangeText = function (value) {\n      var unmaskedPhoneNumber = (value.match(/\\d+/g) || []).join('');\n\n      if (unmaskedPhoneNumber.length === 0) {\n        _this.setState({\n          phoneNumber: ''\n        });\n\n        _this.onChangePropText('', '');\n\n        return;\n      }\n\n      var phoneNumber = _this.state.mask.replace(/9/g, '_');\n\n      for (var index = 0; index < unmaskedPhoneNumber.length; index += 1) {\n        phoneNumber = phoneNumber.replace('_', unmaskedPhoneNumber[index]);\n      }\n\n      var numberPointer = 0;\n\n      for (var _index = phoneNumber.length; _index > 0; _index -= 1) {\n        if (phoneNumber[_index] !== ' ' && !isNaN(phoneNumber[_index])) {\n          numberPointer = _index;\n          break;\n        }\n      }\n\n      phoneNumber = phoneNumber.slice(0, numberPointer + 1);\n      unmaskedPhoneNumber = (phoneNumber.match(/\\d+/g) || []).join('');\n\n      _this.onChangePropText(unmaskedPhoneNumber, phoneNumber);\n\n      _this.setState({\n        phoneNumber: phoneNumber\n      });\n    };\n\n    _this.showModal = function () {\n      return _this.props.disableCountryChange ? null : _this.setState({\n        modalVisible: true\n      });\n    };\n\n    _this.hideModal = function () {\n      return _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.onCountryChange = function _callee(code) {\n      var countryData, country, defaultCountry;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(data);\n\n            case 2:\n              countryData = _context.sent;\n              _context.prev = 3;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(countryData.filter(function (obj) {\n                return obj.code === code;\n              })[0]);\n\n            case 6:\n              country = _context.sent;\n\n              _this.setState({\n                dialCode: country.dialCode,\n                flag: country.flag,\n                mask: country.mask,\n                phoneNumber: ''\n              });\n\n              _this.hideModal();\n\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](3);\n              defaultCountry = _this.state.defaultCountry;\n\n              _this.setState({\n                dialCode: defaultCountry.dialCode,\n                flag: defaultCountry.flag,\n                mask: defaultCountry.mask,\n                phoneNumber: ''\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 11]], Promise);\n    };\n\n    _this.filterCountries = function (value) {\n      var lang = _this.props.lang;\n      var countryData = data.filter(function (obj) {\n        var _obj, _lang$toLowerCase;\n\n        return ((_obj = obj[(_lang$toLowerCase = lang == null ? void 0 : lang.toLowerCase()) != null ? _lang$toLowerCase : \"en\"]) == null ? void 0 : _obj.indexOf(value)) > -1 || obj.dialCode.indexOf(value) > -1;\n      });\n\n      _this.setState({\n        countryData: countryData\n      });\n    };\n\n    _this.renderModal = function () {\n      if (_this.props.customModal) return _this.props.customModal(_this.state.modalVisible, _this.state.countryData, _this.onCountryChange);\n      var _this$props = _this.props,\n          countryModalStyle = _this$props.countryModalStyle,\n          modalContainer = _this$props.modalContainer,\n          modalFlagStyle = _this$props.modalFlagStyle,\n          filterInputStyle = _this$props.filterInputStyle,\n          modalCountryItemCountryNameStyle = _this$props.modalCountryItemCountryNameStyle,\n          modalCountryItemCountryDialCodeStyle = _this$props.modalCountryItemCountryDialCodeStyle,\n          closeText = _this$props.closeText,\n          filterText = _this$props.filterText,\n          searchIconStyle = _this$props.searchIconStyle,\n          closeButtonStyle = _this$props.closeButtonStyle,\n          lang = _this$props.lang;\n      return React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: false,\n        visible: _this.state.modalVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.modalContainer, modalContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.filterInputStyleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        autoFocus: true,\n        onChangeText: _this.filterCountries,\n        placeholder: filterText || 'Filter',\n        style: [styles.filterInputStyle, filterInputStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: [styles.searchIconStyle, searchIconStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, \"\\uD83D\\uDD0D\")), React.createElement(FlatList, {\n        style: {\n          flex: 1\n        },\n        data: _this.state.countryData,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var _lang$toLowerCase2;\n\n          var item = _ref.item;\n          return React.createElement(TouchableWithoutFeedback, {\n            onPress: function onPress() {\n              return _this.onCountryChange(item.code);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }\n          }, React.createElement(View, {\n            style: [styles.countryModalStyle, countryModalStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }\n          }, React.createElement(Text, {\n            style: [styles.modalFlagStyle, modalFlagStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }\n          }, item.flag), React.createElement(View, {\n            style: styles.modalCountryItemContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }\n          }, React.createElement(Text, {\n            style: [styles.modalCountryItemCountryNameStyle, modalCountryItemCountryNameStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }\n          }, item[(_lang$toLowerCase2 = lang == null ? void 0 : lang.toLowerCase()) != null ? _lang$toLowerCase2 : \"en\"]), React.createElement(Text, {\n            style: [styles.modalCountryItemCountryDialCodeStyle, modalCountryItemCountryDialCodeStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }\n          }, \"  \" + item.dialCode))));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this.hideModal();\n        },\n        style: [styles.closeButtonStyle, closeButtonStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.closeTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, closeText || 'CLOSE'))));\n    };\n\n    var _defaultCountry = data.filter(function (obj) {\n      return obj.code === props.defaultCountry;\n    })[0] || data.filter(function (obj) {\n      return obj.code === 'TR';\n    })[0];\n\n    _this.state = {\n      defaultCountry: _defaultCountry,\n      flag: _defaultCountry.flag,\n      modalVisible: false,\n      dialCode: _defaultCountry.dialCode,\n      phoneNumber: '',\n      mask: _defaultCountry.mask,\n      countryData: data\n    };\n    return _this;\n  }\n\n  _createClass(IntlPhoneInput, [{\n    key: \"focus\",\n    value: function focus() {\n      this.props.inputRef.current.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var flag = this.state.flag;\n      var _this$props2 = this.props,\n          containerStyle = _this$props2.containerStyle,\n          flagStyle = _this$props2.flagStyle,\n          phoneInputStyle = _this$props2.phoneInputStyle,\n          dialCodeTextStyle = _this$props2.dialCodeTextStyle,\n          inputProps = _this$props2.inputProps;\n      return React.createElement(View, {\n        style: _objectSpread({}, styles.container, {}, containerStyle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.showModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.openDialogView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.flagStyle, flagStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, flag), React.createElement(Text, {\n        style: [styles.dialCodeTextStyle, dialCodeTextStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      }, this.state.dialCode))), this.renderModal(), React.createElement(TextInput, _extends({}, inputProps, {\n        style: [styles.phoneInputStyle, phoneInputStyle],\n        placeholder: this.props.placeholder || this.state.mask.replace(/9/g, '_'),\n        autoCorrect: false,\n        keyboardType: \"number-pad\",\n        secureTextEntry: false,\n        value: this.state.phoneNumber,\n        onChangeText: this.onChangeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return IntlPhoneInput;\n}(React.Component);\n\nexport { IntlPhoneInput as default };\nIntlPhoneInput.propTypes = {\n  lang: PropTypes.string,\n  defaultCountry: PropTypes.string,\n  onChangeText: PropTypes.func,\n  customModal: PropTypes.func,\n  phoneInputStyle: PropTypes.object,\n  containerStyle: PropTypes.object,\n  dialCodeTextStyle: PropTypes.object,\n  flagStyle: PropTypes.object,\n  modalContainer: PropTypes.object,\n  filterInputStyle: PropTypes.object,\n  closeButtonStyle: PropTypes.object,\n  modalCountryItemCountryNameStyle: PropTypes.object,\n  filterText: PropTypes.string,\n  closeText: PropTypes.string,\n  searchIconStyle: PropTypes.object,\n  disableCountryChange: PropTypes.bool,\n  inputRef: PropTypes.object\n};\nvar styles = StyleSheet.create({\n  closeTextStyle: {\n    padding: 5,\n    fontSize: 20,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  modalCountryItemCountryDialCodeStyle: {\n    fontSize: 15\n  },\n  modalCountryItemCountryNameStyle: {\n    flex: 1,\n    fontSize: 15\n  },\n  modalCountryItemContainer: {\n    flex: 1,\n    paddingLeft: 5,\n    flexDirection: 'row'\n  },\n  modalFlagStyle: {\n    fontSize: 25\n  },\n  modalContainer: {\n    paddingTop: 15,\n    paddingLeft: 25,\n    paddingRight: 25,\n    flex: 10,\n    backgroundColor: 'white'\n  },\n  flagStyle: {\n    fontSize: 35\n  },\n  dialCodeTextStyle: {},\n  countryModalStyle: {\n    flex: 1,\n    borderColor: 'black',\n    borderTopWidth: 1,\n    padding: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  openDialogView: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  filterInputStyle: {\n    flex: 1,\n    paddingTop: 10,\n    paddingBottom: 10,\n    backgroundColor: '#fff',\n    color: '#424242'\n  },\n  searchIcon: {\n    padding: 10\n  },\n  filterInputStyleContainer: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  phoneInputStyle: {\n    marginLeft: 5,\n    flex: 1\n  },\n  container: {\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n    padding: 5,\n    borderRadius: 10,\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  searchIconStyle: {\n    color: 'black',\n    fontSize: 15,\n    marginLeft: 15\n  },\n  buttonStyle: {\n    alignItems: 'center',\n    padding: 14,\n    marginBottom: 10,\n    borderRadius: 3\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  countryStyle: {\n    flex: 1,\n    borderColor: 'black',\n    borderTopWidth: 1,\n    padding: 12\n  },\n  closeButtonStyle: {\n    padding: 12,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["G:/react-native/Doctro/src/IntlPhoneInput.js"],"names":["React","PropTypes","data","IntlPhoneInput","props","onChangePropText","unmaskedPhoneNumber","phoneNumber","state","dialCode","mask","countOfNumber","match","length","onChangeText","isVerified","value","join","setState","replace","index","numberPointer","isNaN","slice","showModal","disableCountryChange","modalVisible","hideModal","onCountryChange","code","countryData","filter","obj","country","flag","defaultCountry","filterCountries","lang","toLowerCase","indexOf","renderModal","customModal","countryModalStyle","modalContainer","modalFlagStyle","filterInputStyle","modalCountryItemCountryNameStyle","modalCountryItemCountryDialCodeStyle","closeText","filterText","searchIconStyle","closeButtonStyle","flex","styles","filterInputStyleContainer","item","toString","modalCountryItemContainer","closeTextStyle","inputRef","current","focus","containerStyle","flagStyle","phoneInputStyle","dialCodeTextStyle","inputProps","container","openDialogView","placeholder","Component","propTypes","string","func","object","bool","StyleSheet","create","padding","fontSize","color","fontWeight","paddingLeft","flexDirection","paddingTop","paddingRight","backgroundColor","borderColor","borderTopWidth","alignItems","justifyContent","paddingBottom","searchIcon","width","marginLeft","paddingHorizontal","borderRadius","buttonStyle","marginBottom","buttonText","countryStyle"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  Modal,\r\n  FlatList,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  TextInput,\r\n} from 'react-native';\r\nimport PropTypes from 'prop-types';\r\nimport data from './Countries';\r\n\r\nexport default class IntlPhoneInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const defaultCountry = data.filter((obj) => obj.code === props.defaultCountry)[0] || data.filter((obj) => obj.code === 'TR')[0];\r\n    this.state = {\r\n      defaultCountry,\r\n      flag: defaultCountry.flag,\r\n      modalVisible: false,\r\n      dialCode: defaultCountry.dialCode,\r\n      phoneNumber: '',\r\n      mask: defaultCountry.mask,\r\n      countryData: data\r\n    };\r\n  }\r\n\r\n  onChangePropText=(unmaskedPhoneNumber, phoneNumber) => {\r\n    const { dialCode, mask } = this.state;\r\n    const countOfNumber = mask.match(/9/g).length;\r\n    if (this.props.onChangeText) {\r\n      const isVerified = countOfNumber === unmaskedPhoneNumber?.length && phoneNumber?.length > 0;\r\n      this.props.onChangeText({\r\n        dialCode, unmaskedPhoneNumber, phoneNumber, isVerified\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeText = (value) => {\r\n    let unmaskedPhoneNumber = (value.match(/\\d+/g) || []).join('');\r\n\r\n    if (unmaskedPhoneNumber.length === 0) {\r\n      this.setState({ phoneNumber: '' });\r\n      this.onChangePropText('', '');\r\n      return;\r\n    }\r\n\r\n\r\n    let phoneNumber = this.state.mask.replace(/9/g, '_');\r\n    for (let index = 0; index < unmaskedPhoneNumber.length; index += 1) {\r\n      phoneNumber = phoneNumber.replace('_', unmaskedPhoneNumber[index]);\r\n    }\r\n    let numberPointer = 0;\r\n    for (let index = phoneNumber.length; index > 0; index -= 1) {\r\n      if (phoneNumber[index] !== ' ' && !isNaN(phoneNumber[index])) {\r\n        numberPointer = index;\r\n        break;\r\n      }\r\n    }\r\n    phoneNumber = phoneNumber.slice(0, numberPointer + 1);\r\n    unmaskedPhoneNumber = (phoneNumber.match(/\\d+/g) || []).join('');\r\n\r\n    this.onChangePropText(unmaskedPhoneNumber, phoneNumber);\r\n    this.setState({ phoneNumber });\r\n  }\r\n\r\n\r\n  showModal = () => (this.props.disableCountryChange ? null : this.setState({ modalVisible: true }));\r\n\r\n  hideModal = () => this.setState({ modalVisible: false });\r\n\r\n  onCountryChange = async (code) => {\r\n    const countryData = await data;\r\n    try {\r\n      const country = await countryData.filter((obj) => obj.code === code)[0];\r\n      this.setState({\r\n        dialCode: country.dialCode,\r\n        flag: country.flag,\r\n        mask: country.mask,\r\n        phoneNumber: ''\r\n      });\r\n      this.hideModal();\r\n    } catch (err) {\r\n      const defaultCountry = this.state.defaultCountry;\r\n      this.setState({\r\n        dialCode: defaultCountry.dialCode,\r\n        flag: defaultCountry.flag,\r\n        mask: defaultCountry.mask,\r\n        phoneNumber: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  filterCountries = (value) => {\r\n   const { lang\r\n  } = this.props;\r\n    const countryData = data.filter((obj) => (obj[lang?.toLowerCase()??\"en\"]?.indexOf(value) > -1 || obj.dialCode.indexOf(value) > -1));\r\n    this.setState({ countryData });\r\n  }\r\n\r\n  focus() {\r\n    this.props.inputRef.current.focus();\r\n  }\r\n\r\n  renderModal=() => {\r\n    if (this.props.customModal) return this.props.customModal(this.state.modalVisible,this.state.countryData,this.onCountryChange);\r\n    const {\r\n      countryModalStyle,\r\n      modalContainer,\r\n      modalFlagStyle,\r\n      filterInputStyle,\r\n      modalCountryItemCountryNameStyle,\r\n      modalCountryItemCountryDialCodeStyle,\r\n      closeText,\r\n      filterText,\r\n      searchIconStyle,\r\n      closeButtonStyle,\r\n      lang\r\n    } = this.props;\r\n    \r\n    return (\r\n      <Modal animationType=\"slide\" transparent={false} visible={this.state.modalVisible}>\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n        <View style={[styles.modalContainer, modalContainer]}>\r\n          <View style={styles.filterInputStyleContainer}>\r\n            <TextInput autoFocus onChangeText={this.filterCountries} placeholder={filterText || 'Filter'} style={[styles.filterInputStyle, filterInputStyle]} />\r\n            <Text style={[styles.searchIconStyle, searchIconStyle]}>🔍</Text>\r\n          </View>\r\n          <FlatList\r\n            style={{ flex: 1 }}\r\n            data={this.state.countryData}\r\n            keyExtractor={(item, index) => index.toString()}\r\n            renderItem={\r\n          ({ item }) => (\r\n            <TouchableWithoutFeedback onPress={() => this.onCountryChange(item.code)}>\r\n              <View style={[styles.countryModalStyle, countryModalStyle]}>\r\n                <Text style={[styles.modalFlagStyle, modalFlagStyle]}>{item.flag}</Text>\r\n                <View style={styles.modalCountryItemContainer}>\r\n                  <Text style={[styles.modalCountryItemCountryNameStyle, modalCountryItemCountryNameStyle]}>{item[lang?.toLowerCase()??\"en\"]}</Text>\r\n                  <Text style={[styles.modalCountryItemCountryDialCodeStyle, modalCountryItemCountryDialCodeStyle]}>{`  ${item.dialCode}`}</Text>\r\n                </View>\r\n              </View>\r\n            </TouchableWithoutFeedback>\r\n          )\r\n        }\r\n          />\r\n        </View>\r\n        <TouchableOpacity onPress={() => this.hideModal()} style={[styles.closeButtonStyle, closeButtonStyle]}>\r\n          <Text style={styles.closeTextStyle}>{closeText || 'CLOSE'}</Text>\r\n        </TouchableOpacity>\r\n        </SafeAreaView>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { flag } = this.state;\r\n    const {\r\n      containerStyle,\r\n      flagStyle,\r\n      phoneInputStyle,\r\n      dialCodeTextStyle,\r\n      inputProps\r\n    } = this.props;\r\n    return (\r\n      <View style={{ ...styles.container, ...containerStyle }}>\r\n        <TouchableOpacity onPress={() => this.showModal()}>\r\n          <View style={styles.openDialogView}>\r\n            <Text style={[styles.flagStyle, flagStyle]}>{flag}</Text>\r\n            <Text style={[styles.dialCodeTextStyle, dialCodeTextStyle]}>{this.state.dialCode}</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n        {this.renderModal()}\r\n        <TextInput\r\n          {...inputProps}\r\n          style={[styles.phoneInputStyle, phoneInputStyle]}\r\n          placeholder={this.props.placeholder || this.state.mask.replace(/9/g, '_')}\r\n          autoCorrect={false}\r\n          keyboardType=\"number-pad\"\r\n          secureTextEntry={false}\r\n          value={this.state.phoneNumber}\r\n          onChangeText={this.onChangeText}\r\n        />\r\n\r\n      </View>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nIntlPhoneInput.propTypes = {\r\n  lang: PropTypes.string,\r\n  defaultCountry: PropTypes.string,\r\n  onChangeText: PropTypes.func,\r\n  customModal: PropTypes.func,\r\n  phoneInputStyle: PropTypes.object, // {}\r\n  containerStyle: PropTypes.object, // {}\r\n  dialCodeTextStyle: PropTypes.object, // {}\r\n  flagStyle: PropTypes.object, // {}\r\n  modalContainer: PropTypes.object, // {}\r\n  filterInputStyle: PropTypes.object, // {}\r\n  closeButtonStyle: PropTypes.object, // {}\r\n  modalCountryItemCountryNameStyle: PropTypes.object, // {}\r\n  filterText: PropTypes.string,\r\n  closeText: PropTypes.string,\r\n  searchIconStyle: PropTypes.object,\r\n  disableCountryChange: PropTypes.bool,\r\n  inputRef: PropTypes.object,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  closeTextStyle: {\r\n    padding: 5,\r\n    fontSize: 20,\r\n    color: 'black',\r\n    fontWeight: 'bold'\r\n  },\r\n  modalCountryItemCountryDialCodeStyle: {\r\n    fontSize: 15\r\n  },\r\n  modalCountryItemCountryNameStyle: {\r\n    flex: 1,\r\n    fontSize: 15\r\n  },\r\n  modalCountryItemContainer: {\r\n    flex: 1,\r\n    paddingLeft: 5,\r\n    flexDirection: 'row'\r\n  },\r\n  modalFlagStyle: {\r\n    fontSize: 25,\r\n  },\r\n  modalContainer: {\r\n    paddingTop: 15,\r\n    paddingLeft: 25,\r\n    paddingRight: 25,\r\n    flex: 10,\r\n    backgroundColor: 'white'\r\n  },\r\n  flagStyle: {\r\n    fontSize: 35,\r\n  },\r\n  dialCodeTextStyle: {\r\n  },\r\n  countryModalStyle: {\r\n    flex: 1,\r\n    borderColor: 'black',\r\n    borderTopWidth: 1,\r\n    padding: 12,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  openDialogView: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  filterInputStyle: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    backgroundColor: '#fff',\r\n    color: '#424242',\r\n  },\r\n  searchIcon: {\r\n    padding: 10,\r\n  },\r\n  filterInputStyleContainer: {\r\n    width: '100%',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  phoneInputStyle: {\r\n    marginLeft: 5,\r\n    flex: 1\r\n  },\r\n  container: {\r\n    flexDirection: 'row',\r\n    paddingHorizontal: 12,\r\n    padding: 5,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n  },\r\n  searchIconStyle: {\r\n    color: 'black',\r\n    fontSize: 15,\r\n    marginLeft: 15\r\n  },\r\n  buttonStyle: {\r\n    alignItems: 'center',\r\n    padding: 14,\r\n    marginBottom: 10,\r\n    borderRadius: 3,\r\n  },\r\n  buttonText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n  },\r\n  countryStyle: {\r\n    flex: 1,\r\n    borderColor: 'black',\r\n    borderTopWidth: 1,\r\n    padding: 12,\r\n  },\r\n  closeButtonStyle: {\r\n    padding: 12,\r\n    alignItems: 'center',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}