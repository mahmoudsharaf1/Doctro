{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"G:\\\\react-native\\\\Doctro\\\\screen\\\\ChatScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Icon, Divider, Avatar } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport { connect } from 'react-redux';\nimport firebase from \"../Firebase\";\n\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (key) {\n      return function (val) {\n        _this.setState(_defineProperty({}, key, val));\n      };\n    };\n\n    _this.sendMessage = function _callee() {\n      var _this$state, user, textMessags, profile, msgId, updates, message;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, user = _this$state.user, textMessags = _this$state.textMessags;\n              profile = _this.props.profile;\n\n              if (_this.state.textMessags.length > 0) {\n                msgId = firebase.database().ref().push().key;\n                updates = {};\n                message = {\n                  message: textMessags,\n                  time: firebase.database.ServerValue.TIMESTAMP,\n                  from: profile.uid,\n                  photoURL: profile.photoURL\n                };\n                updates[\"users/profiles/\" + user.uid + \"/messages/\" + user.uid + '/' + profile.displayName + '/' + msgId] = message;\n                updates[\"users/profiles/\" + profile.uid + \"/messages/\" + profile.uid + '/' + user.displayName + '/' + msgId] = message;\n                firebase.database().ref().update(updates);\n\n                _this.setState({\n                  textMessags: ''\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.convertTime = function (time) {\n      var d = new Date(time);\n      var c = new Date();\n      var result = (d.getHours() < 10 ? '0' : '') + d.getHours() + ':';\n      result += (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();\n      return result;\n    };\n\n    _this.renderRow = function (_ref) {\n      var item = _ref.item;\n      var profile = _this.props.profile;\n      return React.createElement(View, {\n        style: {\n          zIndex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#000',\n          fontSize: 10,\n          textAlign: item.from === _this.props.profile.uid ? 'right' : 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, \"   \", _this.convertTime(item.time), \"   \"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          maxWidth: '80%',\n          alignSelf: item.from === _this.props.profile.uid ? 'flex-end' : 'flex-start',\n          backgroundColor: item.from === _this.props.profile.uid ? '#1590f9' : '#eee',\n          borderRadius: 15,\n          marginTop: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          marginRight: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: item.from === _this.props.profile.uid ? '#fff' : '#000',\n          padding: 5,\n          fontSize: 16,\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }, \"    \", item.message, \" \"))));\n    };\n\n    _this.state = {\n      user: _this.props.navigation.getParam('doctor'),\n      textMessags: '',\n      messageList: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var profile = this.props.profile;\n      var user = this.state.user;\n      firebase.database().ref(\"users/profiles/\" + profile.uid + \"/messages/\").child(profile.uid).child(user.displayName).on('child_added', function (value) {\n        _this2.setState(function (prevState) {\n          return {\n            messageList: [].concat(_toConsumableArray(prevState.messageList), [value.val()])\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _Dimensions$get = Dimensions.get('window'),\n          height = _Dimensions$get.height;\n\n      console.log(this.props.profile);\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          flex: 1,\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: '#fff',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          marginTop: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-left\",\n        type: \"fontawesom\",\n        size: 40,\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, React.createElement(Avatar, {\n        size: 30,\n        rounded: true,\n        source: {\n          uri: this.state.user.photoURL\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontWeight: 'bold',\n          marginLeft: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }, this.state.user.displayName))), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          marginRight: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-videocam\",\n        type: \"ionicon\",\n        size: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      })), React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-call\",\n        type: \"ionicon\",\n        size: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      })))), React.createElement(Divider, {\n        style: {\n          marginBottom: 10,\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }), React.createElement(SafeAreaView, {\n        style: styles.messageList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, React.createElement(FlatList, {\n        ref: function ref(_ref2) {\n          return _this3.flatList = _ref2;\n        },\n        onContentSizeChange: function onContentSizeChange() {\n          return _this3.flatList.scrollToEnd({\n            animated: true\n          });\n        },\n        onLayout: function onLayout() {\n          return _this3.flatList.scrollToEnd({\n            animated: true\n          });\n        },\n        style: {\n          height: height * 0.8,\n          bottom: 5\n        },\n        data: this.state.messageList,\n        renderItem: this.renderRow,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \" Type message...\",\n        placeholderTextColor: \"#888\",\n        value: this.state.textMessags,\n        onChangeText: this.handleChange('textMessags'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.sendMessage,\n        style: styles.btnSend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 29\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-paper-plane\",\n        color: \"#1590f0\",\n        size: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      }))))));\n    }\n  }]);\n\n  return ChatScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  messageList: {\n    flex: 1,\n    backgroundColor: '#fff',\n    bottom: 10,\n    marginTop: 5\n  },\n  input: {\n    padding: 5,\n    borderWidth: 1,\n    borderColor: '#CCC',\n    width: '85%',\n    marginBottom: 10,\n    borderRadius: 10,\n    marginRight: 7,\n    backgroundColor: '#eee'\n  },\n  btnSend: {\n    marginBottom: 10,\n    marginLeft: 5,\n    borderRadius: 20\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.authProfile.profile\n  };\n};\n\nexport default connect(mapStateToProps)(ChatScreen);","map":{"version":3,"sources":["G:/react-native/Doctro/screen/ChatScreen.js"],"names":["React","Component","Icon","Divider","Avatar","Ionicons","connect","firebase","ChatScreen","props","handleChange","key","val","setState","sendMessage","state","user","textMessags","profile","length","msgId","database","ref","push","updates","message","time","ServerValue","TIMESTAMP","from","uid","photoURL","displayName","update","convertTime","d","Date","c","result","getHours","getMinutes","renderRow","item","zIndex","color","fontSize","textAlign","flexDirection","maxWidth","alignSelf","backgroundColor","borderRadius","marginTop","marginRight","padding","navigation","getParam","messageList","child","on","value","prevState","Dimensions","get","height","console","log","styles","container","marginHorizontal","flex","alignItems","justifyContent","goBack","uri","fontWeight","marginLeft","marginBottom","flatList","scrollToEnd","animated","bottom","index","toString","input","btnSend","StyleSheet","create","borderWidth","borderColor","width","mapStateToProps","authProfile"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, SafeAreaView, TextInput, FlatList, Dimensions } from 'react-native';\r\nimport { Icon, Divider, Avatar } from 'react-native-elements';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { connect } from 'react-redux';\r\n\r\nimport firebase from '../Firebase';\r\n// create a component\r\nclass ChatScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: this.props.navigation.getParam('doctor'),\r\n            textMessags: '',\r\n            messageList: []\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { profile } = this.props;\r\n        const { user } = this.state;\r\n        firebase.database().ref(`users/profiles/${profile.uid}/messages/`).child(profile.uid).child(user.displayName)\r\n            .on('child_added', (value) => {\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        messageList: [...prevState.messageList, value.val()]\r\n                    };\r\n                });\r\n            });\r\n    };\r\n\r\n    handleChange = key => val => {\r\n        this.setState({ [key]: val })\r\n    }\r\n\r\n    sendMessage = async () => {\r\n        const { user, textMessags } = this.state;\r\n        const { profile } = this.props;\r\n\r\n        if (this.state.textMessags.length > 0) {\r\n            let msgId = firebase.database().ref().push().key;\r\n            let updates = {};\r\n            let message = {\r\n                message: textMessags,\r\n                time: firebase.database.ServerValue.TIMESTAMP,\r\n                from: profile.uid,\r\n                photoURL: profile.photoURL\r\n            }\r\n            updates[`users/profiles/${user.uid}/messages/` + user.uid + '/' + profile.displayName + '/' + msgId] = message\r\n            updates[`users/profiles/${profile.uid}/messages/` + profile.uid + '/' + user.displayName + '/' + msgId] = message\r\n            firebase.database().ref().update(updates);\r\n            this.setState({ textMessags: '' });\r\n        }\r\n    };\r\n\r\n    convertTime = (time) => {\r\n        let d = new Date(time);\r\n        let c = new Date();\r\n        let result = (d.getHours() < 10 ? '0' : '') + d.getHours() + ':';\r\n        result += (d.getMinutes() < 10 ? '0' : '') + d.getMinutes();\r\n\r\n        // get Month and Day\r\n\r\n        // if(c.getDay !== d.getDay()) {\r\n        //     result = d.getDay() + ' ' + d.getMonth() + ' ' + result     \r\n        // }\r\n        return result;\r\n    }\r\n\r\n    renderRow = ({ item }) => {\r\n        const { profile } = this.props;\r\n        return (\r\n            <View style={{ zIndex: 1 }}>\r\n                <Text style={{ color:'#000', fontSize: 10, textAlign: item.from === this.props.profile.uid ? 'right' : 'left' }}>   {this.convertTime(item.time)}   </Text>\r\n                <View\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        maxWidth: '80%',\r\n                        alignSelf: item.from === this.props.profile.uid ? 'flex-end' : 'flex-start',\r\n                        backgroundColor: item.from === this.props.profile.uid ? '#1590f9' : '#eee',\r\n                        borderRadius: 15,\r\n                        marginTop: 3,\r\n                    }}\r\n                >\r\n                    <View style={{ marginRight: 1 }}>\r\n                        <Text style={{ color: item.from === this.props.profile.uid ? '#fff' : '#000', padding: 5, fontSize: 16, textAlign: 'right' }}>    {item.message} </Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let { height } = Dimensions.get('window');\r\n\r\n        console.log(this.props.profile)\r\n        return (\r\n            <View style={styles.container}>\r\n                <View\r\n                    style={{\r\n                        marginHorizontal: 15,\r\n                        flex: 1,\r\n                        marginTop: 30\r\n                    }}>\r\n\r\n                    <View\r\n                        style={{\r\n                            backgroundColor: '#fff',\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'space-between',\r\n                            marginTop: 15\r\n                        }}>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                            <TouchableOpacity>\r\n                                <Icon name='chevron-left' type='fontawesom' size={40} onPress={() => this.props.navigation.goBack()} />\r\n                            </TouchableOpacity>\r\n\r\n                            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                                <Avatar\r\n                                    size={30}\r\n                                    rounded\r\n                                    source={{ uri: this.state.user.photoURL }}\r\n\r\n                                />\r\n                                <Text style={{ fontWeight: 'bold', marginLeft: 5 }}>{this.state.user.displayName}</Text>\r\n                            </View>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            <TouchableOpacity style={{ marginRight: 15 }} >\r\n                                <Icon name='ios-videocam' type='ionicon' size={23} />\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity>\r\n                                <Icon name='ios-call' type='ionicon' size={23} />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    <Divider style={{ marginBottom: 10, marginTop: 5 }} />\r\n\r\n\r\n                    <SafeAreaView style={styles.messageList}>\r\n                        <FlatList\r\n                            ref={ref => this.flatList = ref}\r\n                            onContentSizeChange={() => this.flatList.scrollToEnd({ animated: true })}\r\n                            onLayout={() => this.flatList.scrollToEnd({ animated: true })}\r\n                            style={{ height: height * 0.8, bottom: 5 }}\r\n                            data={this.state.messageList}\r\n                            renderItem={this.renderRow}\r\n                            keyExtractor={(item, index) => index.toString()}\r\n                        />\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n\r\n                            <TextInput\r\n                                style={styles.input}\r\n                                placeholder=' Type message...'\r\n                                placeholderTextColor='#888'\r\n                                value={this.state.textMessags}\r\n                                onChangeText={this.handleChange('textMessags')}\r\n                            />\r\n\r\n                            <TouchableOpacity onPress={this.sendMessage}\r\n                                style={styles.btnSend}>\r\n                                <Ionicons\r\n                                    name='ios-paper-plane'\r\n                                    color='#1590f0'\r\n                                    size={40}\r\n                                />\r\n                            </TouchableOpacity>\r\n\r\n                        </View>\r\n\r\n                    </SafeAreaView>\r\n\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n    },\r\n    messageList: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        bottom: 10,\r\n        marginTop: 5\r\n    },\r\n    input: {\r\n        padding: 5,\r\n        borderWidth: 1,\r\n        borderColor: '#CCC',\r\n        width: '85%',\r\n        marginBottom: 10,\r\n        borderRadius: 10,\r\n        marginRight: 7,\r\n        backgroundColor: '#eee'\r\n    },\r\n    btnSend: {\r\n        marginBottom: 10,\r\n        marginLeft: 5,\r\n        borderRadius: 20\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.authProfile.profile\r\n    }\r\n};\r\n\r\n//make this component available to the app\r\nexport default connect(mapStateToProps)(ChatScreen);\r\n"]},"metadata":{},"sourceType":"module"}