{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"G:\\\\react-native\\\\Doctro\\\\screen\\\\MakeAppointment.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Calendar } from 'react-native-calendars';\nimport { CheckBox } from 'native-base';\nimport { Divider, Icon, Avatar } from 'react-native-elements';\n\nvar MakeAppointments = function (_Component) {\n  _inherits(MakeAppointments, _Component);\n\n  var _super = _createSuper(MakeAppointments);\n\n  function MakeAppointments(props) {\n    var _this;\n\n    _classCallCheck(this, MakeAppointments);\n\n    _this = _super.call(this, props);\n\n    _this.onDayPress = function (day) {\n      _this.setState({\n        selected: day.dateString\n      });\n    };\n\n    _this.state = {\n      Consultation: false,\n      Treatment: false,\n      time: ''\n    };\n    _this.onDayPress = _this.onDayPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MakeAppointments, [{\n    key: \"ConsultationClick\",\n    value: function ConsultationClick() {\n      this.setState({\n        Consultation: true,\n        Treatment: false\n      });\n    }\n  }, {\n    key: \"TreatmentClick\",\n    value: function TreatmentClick() {\n      this.setState({\n        Consultation: false,\n        Treatment: true\n      });\n    }\n  }, {\n    key: \"renderTab\",\n    value: function renderTab(menu) {\n      var _this2 = this;\n\n      var time = this.state.time;\n      var isActive = time === menu;\n      return React.createElement(TouchableOpacity, {\n        key: \"menu-\" + menu,\n        onPress: function onPress() {\n          return _this2.setState({\n            time: menu\n          });\n        },\n        style: [styles.menu, isActive ? styles.time : null],\n        style: {\n          backgroundColor: isActive ? '#1590f0' : '#fff',\n          borderColor: '#1590f0',\n          borderWidth: .7,\n          paddingVertical: 2,\n          paddingHorizontal: 5,\n          borderRadius: 15,\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: isActive ? '#fff' : '#1590f0',\n          padding: 3,\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, \" \", menu, \" \"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var menus = ['10:00 AM', '11:00 AM', '12:00 PM', '13:00 PM', '14:00 PM', '15:00 PM'];\n      var _this$state = this.state,\n          Consultation = _this$state.Consultation,\n          Treatment = _this$state.Treatment,\n          selected = _this$state.selected,\n          time = _this$state.time;\n      var meeting = {\n        Consultation: Consultation,\n        Treatment: Treatment,\n        selected: selected,\n        time: time\n      };\n      var doctor = this.props.navigation.getParam('doctors');\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, React.createElement(ScrollView, {\n        style: {\n          marginTop: 40\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          marginLeft: 7,\n          color: '#999'\n        },\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, \"Cancle\"), React.createElement(Calendar, {\n        onDayPress: this.onDayPress,\n        onDayLongPress: function onDayLongPress(day) {\n          console.log('selected day', day);\n        },\n        monthFormat: 'MMM yyyy',\n        markedDates: _defineProperty({}, this.state.selected, {\n          selected: true\n        }),\n        onMonthChange: function onMonthChange(month) {\n          console.log('month changed', month);\n        },\n        hideArrows: true,\n        renderArrow: function renderArrow(direction) {\n          return React.createElement(Arrow, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 54\n            }\n          });\n        },\n        disableMonthChange: true,\n        firstDay: 1,\n        onPressArrowLeft: function onPressArrowLeft(substractMonth) {\n          return substractMonth();\n        },\n        onPressArrowRight: function onPressArrowRight(addMonth) {\n          return addMonth();\n        },\n        disableArrowLeft: true,\n        disableArrowRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, \"Available Time\"), React.createElement(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: {\n          flexDirection: 'row',\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.times,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, menus.map(function (menu) {\n        return _this3.renderTab(menu);\n      }))), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.demand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }\n      }, \"Consultation\"), React.createElement(CheckBox, {\n        style: {\n          marginRight: 7\n        },\n        color: Consultation ? '#6CDC17' : '#888',\n        onPress: function onPress() {\n          return _this3.ConsultationClick();\n        },\n        checked: Consultation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      })), React.createElement(Divider, {\n        style: styles.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }), React.createElement(View, {\n        style: styles.demand,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      }, \"Treatment\"), React.createElement(CheckBox, {\n        style: {\n          marginRight: 7\n        },\n        color: Treatment ? '#6CDC17' : '#888',\n        onPress: function onPress() {\n          return _this3.TreatmentClick();\n        },\n        checked: Treatment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 33\n        }\n      })), React.createElement(Divider, {\n        style: styles.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, \"Reminder\"), React.createElement(View, {\n        style: styles.settings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }, \"Select alert\"), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#999'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 37\n        }\n      }, \"30 minutes before\"), React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 37\n        }\n      }, React.createElement(Icon, {\n        name: \"chevron-right\",\n        type: \"fontawesom\",\n        size: 30,\n        color: \"#999\",\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 41\n        }\n      })))))), React.createElement(Divider, {\n        style: styles.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.btnContainer,\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate('Review', {\n            meeting: meeting,\n            doctor: doctor\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#fff',\n          fontSize: 17\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }\n      }, \"Next\")))));\n    }\n  }]);\n\n  return MakeAppointments;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  time: {\n    backgroundColor: '#1590f0',\n    paddingVertical: 7,\n    borderRadius: 15,\n    paddingHorizontal: 20,\n    marginRight: 7\n  },\n  menu: {\n    backgroundColor: 'rgb(243, 240, 240)',\n    paddingVertical: 7,\n    borderRadius: 15,\n    paddingHorizontal: 20,\n    marginRight: 7\n  },\n  demand: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 15\n  },\n  divider: {\n    marginTop: 10\n  },\n  settings: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 10\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  times: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  touchTime: {\n    marginRight: 10,\n    borderWidth: .5,\n    borderRadius: 15,\n    borderColor: '#1590f0'\n  },\n  btnContainer: {\n    flexDirection: 'row',\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#1590f0',\n    padding: 13,\n    borderRadius: 5,\n    marginHorizontal: 15,\n    marginBottom: 30\n  }\n});\nexport default MakeAppointments;","map":{"version":3,"sources":["G:/react-native/Doctro/screen/MakeAppointment.js"],"names":["React","Component","Calendar","CheckBox","Divider","Icon","Avatar","MakeAppointments","props","onDayPress","day","setState","selected","dateString","state","Consultation","Treatment","time","bind","menu","isActive","styles","backgroundColor","borderColor","borderWidth","paddingVertical","paddingHorizontal","borderRadius","marginRight","color","padding","textAlign","menus","meeting","doctor","navigation","getParam","container","marginTop","marginLeft","goBack","console","log","month","direction","substractMonth","addMonth","marginHorizontal","fontSize","fontWeight","flexDirection","times","map","renderTab","demand","ConsultationClick","divider","TreatmentClick","text","settings","alignItems","btnContainer","navigate","StyleSheet","create","flex","justifyContent","touchTime","marginBottom"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport { CheckBox } from 'native-base';\r\nimport { Divider, Icon, Avatar } from 'react-native-elements';\r\n\r\n\r\n\r\nclass MakeAppointments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Consultation: false,\r\n            Treatment: false,\r\n            time: '',\r\n\r\n        }\r\n        this.onDayPress = this.onDayPress.bind(this);\r\n    }\r\n\r\n\r\n    onDayPress = day => {\r\n\r\n        this.setState({\r\n            selected: day.dateString\r\n        })\r\n\r\n    }\r\n\r\n    ConsultationClick() {\r\n        this.setState({\r\n            Consultation: true, Treatment: false\r\n        })\r\n    }\r\n\r\n    TreatmentClick() {\r\n        this.setState({\r\n            Consultation: false, Treatment: true\r\n        })\r\n    }\r\n\r\n\r\n    renderTab(menu) {\r\n        const { time } = this.state;\r\n        const isActive = time === menu;\r\n\r\n        return (\r\n            <TouchableOpacity\r\n                key={`menu-${menu}`}\r\n                onPress={() => this.setState({ time: menu })}\r\n                style={[styles.menu, isActive ? styles.time : null]}\r\n                style={{\r\n                    backgroundColor: isActive ? '#1590f0' : '#fff',\r\n                    borderColor: '#1590f0',\r\n                    borderWidth: .7,\r\n                    paddingVertical: 2,\r\n                    paddingHorizontal:5,\r\n                    borderRadius: 15,\r\n                    marginRight: 10\r\n                }}\r\n            >\r\n                <Text\r\n                    style={{ color: isActive ? '#fff' : '#1590f0', padding: 3, textAlign: 'center' }} > {menu} </Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        const menus = ['10:00 AM', '11:00 AM', '12:00 PM', '13:00 PM', '14:00 PM', '15:00 PM'];\r\n\r\n        const { Consultation, Treatment, selected, time } = this.state;\r\n\r\n        const meeting = { Consultation, Treatment, selected, time }\r\n\r\n        const doctor = this.props.navigation.getParam('doctors')\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <ScrollView style={{ marginTop: 40 }}>\r\n                    <Text style={{ marginLeft: 7, color: '#999' }} onPress={() => this.props.navigation.goBack()} >Cancle</Text>\r\n                    <Calendar\r\n\r\n                        // Handler which gets executed on day press. Default = undefined\r\n                        onDayPress={this.onDayPress}\r\n                        // Handler which gets executed on day long press. Default = undefined\r\n                        onDayLongPress={(day) => { console.log('selected day', day) }}\r\n                        // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\r\n                        monthFormat={'MMM yyyy'}\r\n\r\n                        markedDates={{ [this.state.selected]: { selected: true } }}\r\n                        // Handler which gets executed when visible month changes in calendar. Default = undefined\r\n                        onMonthChange={(month) => { console.log('month changed', month) }}\r\n                        // Hide month navigation arrows. Default = false\r\n                        hideArrows={true}\r\n                        // Replace default arrows with custom ones (direction can be 'left' or 'right')\r\n                        renderArrow={(direction) => (<Arrow />)}\r\n                        // If hideArrows=false and hideExtraDays=false do not switch month when tapping on greyed out\r\n                        // day from another month that is visible in calendar page. Default = false\r\n                        disableMonthChange={true}\r\n                        // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday.\r\n                        firstDay={1}\r\n                        // Handler which gets executed when press arrow icon left. It receive a callback can go back month\r\n                        onPressArrowLeft={substractMonth => substractMonth()}\r\n                        // Handler which gets executed when press arrow icon right. It receive a callback can go next month\r\n                        onPressArrowRight={addMonth => addMonth()}\r\n                        // Disable left arrow. Default = false\r\n                        disableArrowLeft={true}\r\n                        // Disable right arrow. Default = false\r\n                        disableArrowRight={true}\r\n                    />\r\n\r\n                    <View style={{ marginHorizontal: 15, marginTop: 20 }}>\r\n                        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>Available Time</Text>\r\n                        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={{ flexDirection: 'row', marginTop: 20 }}>\r\n                            <View style={styles.times}>\r\n                                {menus.map(menu => this.renderTab(menu))}\r\n                            </View>\r\n                        </ScrollView>\r\n                        <View style={{ marginTop: 20 }}>\r\n                            <View style={styles.demand}>\r\n                                <Text>Consultation</Text>\r\n                                <CheckBox\r\n                                    style={{ marginRight: 7 }}\r\n                                    color={Consultation ? '#6CDC17' : '#888'}\r\n                                    onPress={() => this.ConsultationClick()}\r\n                                    checked={Consultation}\r\n\r\n                                />\r\n                            </View>\r\n                            <Divider style={styles.divider} />\r\n                            <View style={styles.demand}>\r\n                                <Text>Treatment</Text>\r\n                                <CheckBox\r\n                                    style={{ marginRight: 7 }}\r\n                                    color={Treatment ? '#6CDC17' : '#888'}\r\n                                    onPress={() => this.TreatmentClick()}\r\n                                    checked={Treatment}\r\n                                />\r\n                            </View>\r\n                            <Divider style={styles.divider} />\r\n                        </View>\r\n                        <View style={{ marginTop: 20 }}>\r\n                            <Text style={styles.text}>Reminder</Text>\r\n                            <View style={styles.settings}>\r\n                                <Text>Select alert</Text>\r\n                                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                                    <Text style={{ color: '#999' }}>30 minutes before</Text>\r\n                                    <TouchableOpacity>\r\n                                        <Icon name='chevron-right' type='fontawesom' size={30} color='#999' style={{ textAlign: 'right' }} />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                    <Divider style={styles.divider} />\r\n                    <View>\r\n                        <TouchableOpacity style={styles.btnContainer} onPress={() => this.props.navigation.navigate('Review', { meeting, doctor })}>\r\n                            <Text style={{ color: '#fff', fontSize: 17 }}>Next</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </ScrollView>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff'\r\n    },\r\n    time: {\r\n        backgroundColor: '#1590f0',\r\n        paddingVertical: 7,\r\n        borderRadius: 15,\r\n        paddingHorizontal: 20,\r\n        marginRight: 7,\r\n    },\r\n    menu: {\r\n        backgroundColor: 'rgb(243, 240, 240)',\r\n        paddingVertical: 7,\r\n        borderRadius: 15,\r\n        paddingHorizontal: 20,\r\n        marginRight: 7\r\n    },\r\n    demand: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginTop: 15\r\n    },\r\n    divider: {\r\n        marginTop: 10\r\n    },\r\n    settings: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginTop: 10\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold'\r\n    },\r\n    times: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between'\r\n    },\r\n    touchTime: {\r\n        marginRight: 10,\r\n        borderWidth: .5,\r\n        borderRadius: 15,\r\n        borderColor: '#1590f0',\r\n\r\n    },\r\n    btnContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 20,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#1590f0',\r\n        padding: 13,\r\n        borderRadius: 5,\r\n        marginHorizontal: 15,\r\n        marginBottom: 30\r\n    },\r\n});\r\n\r\n\r\n//make this component available to the app\r\nexport default MakeAppointments;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}