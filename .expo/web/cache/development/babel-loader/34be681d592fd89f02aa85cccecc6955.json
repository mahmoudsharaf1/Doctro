{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\react-native\\\\Doctro\\\\screen\\\\ChangePassword.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from '@expo/vector-icons';\nimport firebase from \"../Firebase\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar ChangePassword = function (_Component) {\n  _inherits(ChangePassword, _Component);\n\n  var _super = _createSuper(ChangePassword);\n\n  function ChangePassword() {\n    var _this;\n\n    _classCallCheck(this, ChangePassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      newPassword: ''\n    };\n\n    _this.onChangePassword = function () {\n      var user = firebase.auth().currentUser;\n      user.updatePassword(_this.state.newPassword).then(function () {\n        Alert.alert('Password has been change');\n\n        _this.setState({\n          newPassword: ''\n        });\n      }).catch(function (error) {\n        Alert.alert(error.message);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChangePassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.goBack();\n        },\n        style: {\n          marginHorizontal: 15,\n          marginTop: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-arrow-back\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          marginTop: 42\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 25,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"Change Password\")), React.createElement(View, {\n        style: {\n          marginHorizontal: 15,\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          marginTop: 90\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: \"add new password\",\n        autoCapitalize: \"none\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            newPassword: text\n          });\n        },\n        value: this.state.newPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.onChangePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#fff',\n          padding: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \"Change Password\")));\n    }\n  }]);\n\n  return ChangePassword;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  input: {\n    backgroundColor: '#eee',\n    padding: 10,\n    borderRadius: 4,\n    width: width / 1.1\n  },\n  button: {\n    backgroundColor: '#1690f0',\n    borderRadius: 4,\n    padding: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 1,\n    marginTop: 15,\n    marginHorizontal: 15\n  }\n});\nexport default ChangePassword;","map":{"version":3,"sources":["E:/react-native/Doctro/screen/ChangePassword.js"],"names":["React","Component","Ionicons","firebase","Dimensions","get","width","height","ChangePassword","state","newPassword","onChangePassword","user","auth","currentUser","updatePassword","then","Alert","alert","setState","catch","error","message","styles","container","props","navigation","goBack","marginHorizontal","marginTop","fontSize","fontWeight","justifyContent","alignItems","input","text","button","color","padding","StyleSheet","create","flex","backgroundColor","borderRadius","elevation"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,QAAP;;sBAE0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;IAITC,c;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE;AADT,K;;UAIZC,gB,GAAmB,YAAM;AACrB,UAAIC,IAAI,GAAGT,QAAQ,CAACU,IAAT,GAAgBC,WAA3B;AAEAF,MAAAA,IAAI,CAACG,cAAL,CAAoB,MAAKN,KAAL,CAAWC,WAA/B,EAA4CM,IAA5C,CAAiD,YAAM;AAEnDC,QAAAA,KAAK,CAACC,KAAN,CAAY,0BAAZ;;AACA,cAAKC,QAAL,CAAc;AAAET,UAAAA,WAAW,EAAE;AAAf,SAAd;AACH,OAJD,EAIGU,KAJH,CAIS,UAACC,KAAD,EAAW;AAEhBJ,QAAAA,KAAK,CAACC,KAAN,CAAYG,KAAK,CAACC,OAAlB;AACH,OAPD;AAQH,K;;;;;;;6BAEY;AAAA;;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,KAAL,CAAWC,UAAX,CAAsBC,MAAtB,EAAN;AAAA,SAA3B;AAAiE,QAAA,KAAK,EAAE;AAACC,UAAAA,gBAAgB,EAAE,EAAnB;AAAuBC,UAAAA,SAAS,EAAE;AAAlC,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,gBAAf;AAAgC,QAAA,IAAI,EAAE,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADR,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACD,UAAAA,gBAAgB,EAAE,EAAnB;AAAuBC,UAAAA,SAAS,EAAE;AAAlC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAGC,UAAAA,QAAQ,EAAE,EAAb;AAAiBC,UAAAA,UAAU,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CAJJ,EAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEH,UAAAA,gBAAgB,EAAE,EAApB;AAAyBI,UAAAA,cAAc,EAAE,YAAzC;AAAuDC,UAAAA,UAAU,EAAE,QAAnE;AAA6EJ,UAAAA,SAAS,EAAE;AAAxF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAEN,MAAM,CAACW,KADlB;AAEI,QAAA,WAAW,EAAC,kBAFhB;AAGI,QAAA,cAAc,EAAC,MAHnB;AAII,QAAA,eAAe,MAJnB;AAKI,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAU,MAAI,CAAChB,QAAL,CAAc;AAAET,YAAAA,WAAW,EAAEyB;AAAf,WAAd,CAAV;AAAA,SALlB;AAMI,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC,WANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CARJ,EAkBI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEa,MAAM,CAACa,MAAhC;AAAwC,QAAA,OAAO,EAAE,KAAKzB,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAC0B,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,OAAO,EAAE;AAAzB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CAlBJ,CADJ;AAwBH;;;;EA5CwBrC,S;;AAgD7B,IAAMsB,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC7BhB,EAAAA,SAAS,EAAE;AACPiB,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV,GADkB;AAK7BR,EAAAA,KAAK,EAAE;AACHQ,IAAAA,eAAe,EAAE,MADd;AAEHJ,IAAAA,OAAO,EAAE,EAFN;AAGHK,IAAAA,YAAY,EAAE,CAHX;AAIHrC,IAAAA,KAAK,EAAEA,KAAK,GAAG;AAJZ,GALsB;AAW7B8B,EAAAA,MAAM,EAAE;AACJM,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,YAAY,EAAE,CAFV;AAGJL,IAAAA,OAAO,EAAE,CAHL;AAIJN,IAAAA,cAAc,EAAE,QAJZ;AAKJC,IAAAA,UAAU,EAAE,QALR;AAMJW,IAAAA,SAAS,EAAE,CANP;AAOJf,IAAAA,SAAS,EAAE,EAPP;AAQJD,IAAAA,gBAAgB,EAAE;AARd;AAXqB,CAAlB,CAAf;AAwBA,eAAepB,cAAf","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Alert, Dimensions } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nimport firebase from '../Firebase';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\n\r\n// create a component\r\nclass ChangePassword extends Component {\r\n\r\n    state = {\r\n        newPassword: ''\r\n    }\r\n\r\nonChangePassword = () => {\r\n    var user = firebase.auth().currentUser;\r\n\r\n    user.updatePassword(this.state.newPassword).then(() => {\r\n    // Update successful.\r\n        Alert.alert('Password has been change');\r\n        this.setState({ newPassword: ''})\r\n    }).catch((error) => {\r\n    // An error happened.\r\n        Alert.alert(error.message)\r\n    });\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.container}>\r\n                    <TouchableOpacity onPress={() => this.props.navigation.goBack()} style={{marginHorizontal: 15, marginTop: 30}}>\r\n                        <Ionicons name='ios-arrow-back' size={30}  />\r\n                    </TouchableOpacity>\r\n                <View style={{marginHorizontal: 15, marginTop: 42}}>\r\n                    <Text style={{  fontSize: 25, fontWeight: 'bold' }}>Change Password</Text>\r\n                \r\n                </View>\r\n                <View style={{ marginHorizontal: 15,  justifyContent: 'flex-start', alignItems: 'center', marginTop: 90}}>\r\n                    <TextInput  \r\n                        style={styles.input}\r\n                        placeholder='add new password' \r\n                        autoCapitalize='none'\r\n                        secureTextEntry\r\n                        onChangeText={(text) => this.setState({ newPassword: text })}\r\n                        value={this.state.newPassword}\r\n                    />\r\n                </View>\r\n                <TouchableOpacity style={styles.button} onPress={this.onChangePassword}>\r\n                    <Text style={{color: '#fff', padding: 10}}>Change Password</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff'\r\n    },\r\n    input: {\r\n        backgroundColor: '#eee',\r\n        padding: 10,\r\n        borderRadius: 4,\r\n        width: width / 1.1,\r\n    },\r\n    button: {\r\n        backgroundColor: '#1690f0',\r\n        borderRadius: 4,\r\n        padding: 5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        elevation: 1,\r\n        marginTop: 15,\r\n        marginHorizontal: 15,\r\n      }\r\n});\r\n\r\n//make this component available to the app\r\nexport default ChangePassword;\r\n"]},"metadata":{},"sourceType":"module"}