{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport firebase from \"../Firebase\";\nimport { SIGNIN_ATTEMPING, SIGNUP_FAILED, SIGNIN_SUCCESS, LOGIN_ATTEMPING, LOGIN_SUCCESS, LOGIN_FAILED } from \"./type\";\nexport var handelSignUp = function handelSignUp(_ref) {\n  var displayName = _ref.displayName,\n      email = _ref.email,\n      address = _ref.address,\n      password = _ref.password,\n      phone = _ref.phone,\n      photoURL = _ref.photoURL,\n      location = _ref.location,\n      photo = _ref.photo;\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: SIGNIN_ATTEMPING\n            });\n            firebase.auth().createUserWithEmailAndPassword(email, password).then(function (resp) {\n              firebase.database().ref('users/profiles/' + resp.user.uid).set({\n                displayName: displayName,\n                email: email,\n                address: address,\n                password: password,\n                phone: phone,\n                photoURL: photoURL,\n                location: location,\n                uid: resp.user.uid\n              }).then(function (response) {\n                AsyncStorage.setItem('uid', resp.user.uid);\n                dispatch({\n                  type: SIGNIN_SUCCESS,\n                  payload: {\n                    displayName: displayName,\n                    email: email,\n                    address: address,\n                    password: password,\n                    phone: phone,\n                    photoURL: photoURL,\n                    location: location,\n                    uid: resp.user.uid\n                  },\n                  payload2: null\n                });\n              });\n            }).catch(function (error) {\n              dispatch({\n                type: SIGNUP_FAILED,\n                payload: error.message\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var signIn = function signIn(_ref2) {\n  var email = _ref2.email,\n      password = _ref2.password;\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: LOGIN_ATTEMPING\n            });\n            firebase.auth().signInWithEmailAndPassword(email, password).then(function (resp) {\n              firebase.database().ref('users/profiles').child(resp.user.uid).on('value', function (snapshot) {\n                var profile = snapshot.val();\n                AsyncStorage.setItem('uid', resp.user.uid);\n                dispatch({\n                  type: LOGIN_SUCCESS,\n                  payload: profile\n                });\n              });\n            }).catch(function (err) {\n              dispatch({\n                type: LOGIN_FAILED,\n                payload: err.message\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["G:/react-native/Doctro/actions/authentication.js"],"names":["firebase","SIGNIN_ATTEMPING","SIGNUP_FAILED","SIGNIN_SUCCESS","LOGIN_ATTEMPING","LOGIN_SUCCESS","LOGIN_FAILED","handelSignUp","displayName","email","address","password","phone","photoURL","location","photo","dispatch","type","auth","createUserWithEmailAndPassword","then","resp","database","ref","user","uid","set","response","AsyncStorage","setItem","payload","payload2","catch","error","message","signIn","signInWithEmailAndPassword","child","on","snapshot","profile","val","err"],"mappings":"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","sourcesContent":["import { AsyncStorage } from 'react-native';\r\nimport firebase from '../Firebase';\r\n\r\nimport {\r\n    SIGNIN_ATTEMPING,\r\n    SIGNUP_FAILED,\r\n    SIGNIN_SUCCESS,\r\n\r\n    LOGIN_ATTEMPING,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED\r\n} from './type';\r\n\r\n\r\n\r\nexport const handelSignUp = ({ displayName, email, address, password, phone, photoURL, location, photo }) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: SIGNIN_ATTEMPING })\r\n\r\n        // const uid = firebase.auth().currentUser.uid;\r\n        // firebase.database().ref('users/profiles/').child(uid).child('photoURL').set(photo)\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(resp => {\r\n\r\n\r\n            firebase.database().ref('users/profiles/' + resp.user.uid).set({ displayName, email, address, password, phone, photoURL, location, uid: resp.user.uid })\r\n                .then((response) => {\r\n                    AsyncStorage.setItem('uid', resp.user.uid);\r\n\r\n                    dispatch({\r\n                        type: SIGNIN_SUCCESS, payload: { displayName, email, address, password, phone, photoURL, location, uid: resp.user.uid }, payload2: null\r\n                    })\r\n                })\r\n        }).catch(error => {\r\n            dispatch({ type: SIGNUP_FAILED, payload: error.message })\r\n        })\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const signIn = ({ email, password }) => {\r\n\r\n\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: LOGIN_ATTEMPING });\r\n\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(resp => {\r\n\r\n            firebase.database().ref('users/profiles').child(resp.user.uid).on('value', (snapshot) => {\r\n                const profile = snapshot.val();\r\n                AsyncStorage.setItem('uid', resp.user.uid);\r\n\r\n                dispatch({\r\n                    type: LOGIN_SUCCESS, payload: profile\r\n                });\r\n\r\n            })\r\n        }).catch(err => {\r\n            dispatch({ type: LOGIN_FAILED, payload: err.message });\r\n\r\n        });\r\n\r\n    };\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}