{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport firebase from \"../Firebase\";\nimport { SIGNIN_ATTEMPING, SIGNUP_FAILED, SIGNIN_SUCCESS, LOGIN_SUCCESS } from \"./type\";\nexport var handelSignUp = function handelSignUp(_ref) {\n  var displayName = _ref.displayName,\n      email = _ref.email,\n      address = _ref.address,\n      password = _ref.password,\n      phone = _ref.phone,\n      photoURL = _ref.photoURL;\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              dispatch({\n                type: SIGNIN_ATTEMPING\n              });\n              firebase.auth().createUserWithEmailAndPassword(email, password).then(function (resp) {\n                firebase.database().ref('users/profiles/' + resp.user.uid).set({\n                  displayName: displayName,\n                  email: email,\n                  address: address,\n                  password: password,\n                  phone: phone,\n                  photoURL: photoURL,\n                  uid: resp.user.uid\n                }).then(function (resp) {\n                  AsyncStorage.setItem('uid', resp.user.uid);\n                  dispatch({\n                    type: SIGNIN_SUCCESS,\n                    payload: {\n                      displayName: displayName,\n                      email: email,\n                      address: address,\n                      password: password,\n                      phone: phone,\n                      photoURL: photoURL,\n                      uid: resp.user.uid\n                    },\n                    payload2: null\n                  });\n                });\n              }).catch(function (error) {\n                dispatch({\n                  type: SIGNUP_FAILED,\n                  error: ''\n                });\n              });\n            } catch (err) {\n              console.log(err);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var signIn = function signIn(_ref2) {\n  var email = _ref2.email,\n      password = _ref2.password;\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: SIGNIN_ATTEMPING\n            });\n            console.log(SIGNIN_ATTEMPING);\n            firebase.auth().signInWithEmailAndPassword(email, password).then(function (resp) {\n              firebase.database().ref('users/' + 'profiles' + '/').child(resp.user.uid).on('value', function (snapshot) {\n                var profile = snapshot.val();\n                AsyncStorage.setItem('uid', resp.user.uid);\n                dispatch({\n                  type: LOGIN_SUCCESS,\n                  payload: profile\n                });\n              });\n            }).catch(function (err) {\n              dispatch({\n                type: SIGNUP_FAILED,\n                payload: err.message\n              });\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["E:/react-native/Doctro/actions/authentication.js"],"names":["firebase","SIGNIN_ATTEMPING","SIGNUP_FAILED","SIGNIN_SUCCESS","LOGIN_SUCCESS","handelSignUp","displayName","email","address","password","phone","photoURL","dispatch","type","auth","createUserWithEmailAndPassword","then","resp","database","ref","user","uid","set","AsyncStorage","setItem","payload","payload2","catch","error","err","console","log","signIn","signInWithEmailAndPassword","child","on","snapshot","profile","val","message"],"mappings":"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","sourcesContent":["import { AsyncStorage } from 'react-native';\r\nimport firebase from '../Firebase';\r\n\r\nimport { SIGNIN_ATTEMPING, SIGNUP_FAILED, SIGNIN_SUCCESS, LOGIN_SUCCESS } from './type';\r\n\r\n\r\nexport const handelSignUp = ({ displayName, email, address, password, phone, photoURL }) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: SIGNIN_ATTEMPING })\r\n\r\n\r\n\r\n            firebase.auth().createUserWithEmailAndPassword(email, password).then(resp => {\r\n\r\n\r\n                firebase.database().ref('users/profiles/' + resp.user.uid).set({ displayName, email, address, password, phone, photoURL, uid: resp.user.uid })\r\n                    .then((resp) => {\r\n                        AsyncStorage.setItem('uid', resp.user.uid);\r\n\r\n                        dispatch({\r\n                            type: SIGNIN_SUCCESS, payload: { displayName, email, address, password, phone, photoURL, uid: resp.user.uid }, payload2: null\r\n                        })\r\n                    })\r\n            }).catch(error => {\r\n                dispatch({ type: SIGNUP_FAILED, error: '' })\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const signIn = ({ email, password }) => {\r\n\r\n\r\n\r\n    return async (dispatch) => {\r\n\r\n        dispatch({ type: SIGNIN_ATTEMPING });\r\n\r\n        console.log(SIGNIN_ATTEMPING)\r\n        firebase.auth().signInWithEmailAndPassword(email, password).then(resp => {\r\n\r\n            firebase.database().ref('users/' + 'profiles' + '/').child(resp.user.uid).on('value', (snapshot) => {\r\n                const profile = snapshot.val();\r\n                AsyncStorage.setItem('uid', resp.user.uid);\r\n                // AsyncStorage.setItem('type', 'vendor');\r\n\r\n                dispatch({\r\n                    type: LOGIN_SUCCESS, payload: profile\r\n                });\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n        }).catch(err => {\r\n            dispatch({ type: SIGNUP_FAILED, payload: err.message });\r\n\r\n        })\r\n\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}