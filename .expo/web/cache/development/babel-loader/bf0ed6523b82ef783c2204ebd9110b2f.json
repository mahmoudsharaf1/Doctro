{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"../Firebase\";\nimport { LOCATION_ATTEMPING, LOCATION_SUCCESS, LOCATION_FAILED } from \"./type\";\nexport var savelocation = function savelocation(_ref) {\n  var address = _ref.address,\n      latitude = _ref.latitude,\n      longitude = _ref.longitude;\n  return function _callee(dispatch) {\n    var uid;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: LOCATION_ATTEMPING\n            });\n            _context.prev = 1;\n            uid = firebase.auth().currentUser.uid;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(firebase.database().ref('users/profiles/' + uid).push({\n              address: address,\n              latitude: latitude,\n              longitude: longitude\n            }));\n\n          case 5:\n            dispatch({\n              type: LOCATION_SUCCESS\n            });\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch({\n              type: LOCATION_FAILED\n            });\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n};","map":{"version":3,"sources":["E:/react-native/Doctro/actions/seLocation_action.js"],"names":["firebase","LOCATION_ATTEMPING","LOCATION_SUCCESS","LOCATION_FAILED","savelocation","address","latitude","longitude","dispatch","type","uid","auth","currentUser","database","ref","push","console","log"],"mappings":";AAAA,OAAOA,QAAP;AAEA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,eAHJ;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoC;AAAA,MAAlCC,OAAkC,QAAlCA,OAAkC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAG5D,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHA,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAER;AAAR,aAAD,CAAR;AAFG;AAMKS,YAAAA,GANL,GAMWV,QAAQ,CAACW,IAAT,GAAgBC,WAAhB,CAA4BF,GANvC;AAAA;AAAA,6CAQOV,QAAQ,CAACa,QAAT,GAAoBC,GAApB,CAAwB,oBAAoBJ,GAA5C,EAAiDK,IAAjD,CAAsD;AAACV,cAAAA,OAAO,EAAPA,OAAD;AAAUC,cAAAA,QAAQ,EAARA,QAAV;AAAoBC,cAAAA,SAAS,EAATA;AAApB,aAAtD,CARP;;AAAA;AAUCC,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEP;AAAR,aAAD,CAAR;AAVD;AAAA;;AAAA;AAAA;AAAA;AAcCM,YAAAA,QAAQ,CAAC;AAAEC,cAAAA,IAAI,EAAEN;AAAR,aAAD,CAAR;AAEAa,YAAAA,OAAO,CAACC,GAAR;;AAhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAmBH,CAtBM","sourcesContent":["import firebase from '../Firebase';\r\n\r\nimport { \r\n    LOCATION_ATTEMPING, \r\n    LOCATION_SUCCESS, \r\n    LOCATION_FAILED\r\n} from './type';\r\n\r\nexport const savelocation = ({address, latitude, longitude}) => {\r\n    \r\n\r\n    return async(dispatch) => {\r\n\r\n        dispatch({ type: LOCATION_ATTEMPING });\r\n\r\n        try{\r\n\r\n            let uid = firebase.auth().currentUser.uid\r\n\r\n            await firebase.database().ref('users/profiles/' + uid).push({address, latitude, longitude})\r\n\r\n            dispatch({ type: LOCATION_SUCCESS });\r\n\r\n        } catch(e) {\r\n\r\n            dispatch({ type: LOCATION_FAILED });\r\n\r\n            console.log(e)\r\n        }\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}