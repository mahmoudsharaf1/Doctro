{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\react-native\\\\Doctro\\\\screen\\\\Map.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport MapView from 'react-native-maps';\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { connect } from 'react-redux';\nimport firebase from \"../Firebase\";\n\nvar Map = function (_Component) {\n  _inherits(Map, _Component);\n\n  var _super = _createSuper(Map);\n\n  function Map() {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      users: [],\n      latitude: null,\n      longitude: null\n    };\n\n    _this.getLocation = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(navigator.geolocation.getCurrentPosition(function (position) {\n                _this.setState({\n                  latitude: position.coords.latitude,\n                  longitude: position.coords.longitude,\n                  error: null\n                });\n\n                console.log(position.coords.latitude);\n                console.log(position.coords.longitude);\n              }));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    };\n\n    _this.renderRowusers = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.photoURL\n        },\n        style: {\n          flex: 1,\n          width: 90,\n          height: 90,\n          resizeMode: 'cover',\n          borderRadius: 7,\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'center',\n          marginLeft: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, item.displayName)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-pin\",\n        type: \"ionicon\",\n        size: 15,\n        color: \"#999\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: styles.textTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, \"  \", item.address, \" ,\"), React.createElement(Text, {\n        style: styles.textTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, \" \", item.specialty)), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.textTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, \" \", item.experience, React.createElement(Text, {\n        style: {\n          fontSize: 15,\n          textAlign: 'center',\n          color: '#000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }\n      }, \"  $\", item.hourlyRate, \"/hr\"))))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.database().ref('specialty').on('child_added', function (val) {\n        val.forEach(function (snapVal) {\n          var users = snapVal.toJSON();\n\n          _this2.setState(function (prevState) {\n            return {\n              users: [].concat(_toConsumableArray(prevState.users), [users])\n            };\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getLocation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var location = this.props.profile.location;\n      var _this$state = this.state,\n          latitude = _this$state.latitude,\n          longitude = _this$state.longitude;\n      var location2 = {\n        latitude: latitude,\n        longitude: longitude\n      };\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.containerMap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          flex: 1\n        },\n        onPress: function onPress() {\n          return _this3.props.navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-arrow-back\",\n        size: 30,\n        style: styles.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-funnel\",\n        size: 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 32,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, \"Browse\"))), React.createElement(MapView, {\n        style: {\n          flex: 1\n        },\n        showsUserLocation: true,\n        followsUserLocation: true,\n        ref: function ref(map) {\n          return _this3.map = map;\n        },\n        initialRegion: {\n          latitude: location ? location.latitude : location2.latitude,\n          longitude: location ? location.longitude : location2.longitude,\n          latitudeDelta: 0.003,\n          longitudeDelta: 0.00035\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, this.state.users.map(function (item) {\n        return React.createElement(MapView.Marker, {\n          description: item.address,\n          key: item.displayName,\n          title: item.displayName,\n          pinColor: \"#1590f0\",\n          coordinate: {\n            latitude: item.location.latitude,\n            longitude: item.location.longitude\n          },\n          onPress: function onPress() {\n            return _this3.props.navigation.navigate('Profile01', {\n              item: item\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 37\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 41\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 45,\n            height: 45,\n            borderWidth: 1.5,\n            borderColor: '#1590f0',\n            borderRadius: 50\n          },\n          source: {\n            uri: item.photoURL\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 45\n          }\n        }), item.online && React.createElement(View, {\n          style: {\n            backgroundColor: '#00ee4e',\n            height: 10,\n            width: 10,\n            borderRadius: 20,\n            shadowColor: '#000',\n            shadowOpacity: .15,\n            shadowOffset: {\n              width: 0,\n              height: 2\n            },\n            elevation: 2,\n            alignSelf: 'center',\n            position: 'absolute',\n            top: 0,\n            left: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 49\n          }\n        })));\n      })), React.createElement(ScrollView, {\n        style: {\n          position: 'absolute',\n          zIndex: 1,\n          bottom: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, React.createElement(FlatList, {\n        horizontal: true,\n        data: this.state.users,\n        renderItem: this.renderRowusers,\n        keyExtractor: function keyExtractor(item) {\n          return item.uid;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return Map;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  containerMap: {\n    position: 'absolute',\n    zIndex: 1,\n    flexDirection: 'row',\n    marginTop: 30,\n    justifyContent: 'space-between',\n    marginHorizontal: 15\n  },\n  title: {\n    position: 'absolute',\n    zIndex: 1,\n    marginTop: 30,\n    marginLeft: 5\n  },\n  location: {\n    flexDirection: 'row',\n    textAlign: 'left'\n  },\n  card: {\n    backgroundColor: '#fff',\n    marginLeft: 10,\n    flexDirection: 'row',\n    elevation: 5,\n    borderRadius: 7,\n    width: Dimensions.get('window').width / 1.2,\n    padding: 7\n  },\n  textTitle: {\n    color: '#666',\n    fontSize: 15\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(_ref2) {\n  var authProfile = _ref2.authProfile;\n  return {\n    profile: authProfile.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Map);","map":{"version":3,"sources":["E:/react-native/Doctro/screen/Map.js"],"names":["React","Component","MapView","Ionicons","connect","firebase","Map","state","users","latitude","longitude","getLocation","navigator","geolocation","getCurrentPosition","position","setState","coords","error","console","log","renderRowusers","item","styles","card","uri","photoURL","flex","width","height","resizeMode","borderRadius","marginRight","justifyContent","marginLeft","fontSize","displayName","flexDirection","alignItems","textTitle","address","specialty","experience","textAlign","color","hourlyRate","database","ref","on","val","forEach","snapVal","toJSON","prevState","location","props","profile","location2","container","containerMap","navigation","goBack","title","fontWeight","map","latitudeDelta","longitudeDelta","navigate","borderWidth","borderColor","online","backgroundColor","shadowColor","shadowOpacity","shadowOffset","elevation","alignSelf","top","left","zIndex","bottom","uid","StyleSheet","create","marginTop","marginHorizontal","Dimensions","get","padding","mapStateToProps","authProfile"],"mappings":"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","sourcesContent":["//import liraries\r\nimport React, { Component } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    TouchableOpacity,\r\n    Dimensions,\r\n    ScrollView,\r\n    Image,\r\n    FlatList\r\n} from 'react-native';\r\nimport MapView from 'react-native-maps';\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport firebase from '../Firebase';\r\n// create a component\r\nclass Map extends Component {\r\n\r\n    state = {\r\n        users: [],\r\n        latitude: null,\r\n        longitude: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.database().ref('specialty').on('child_added', (val) => {\r\n            val.forEach((snapVal) => {\r\n                let users = snapVal.toJSON();\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        users: [...prevState.users, users]\r\n                    }\r\n                })\r\n            })\r\n\r\n        });\r\n    };\r\n\r\n\r\n    componentWillMount() {\r\n        this.getLocation();\r\n    }\r\n\r\n\r\n    getLocation = async () => {\r\n        try {\r\n\r\n            await navigator.geolocation.getCurrentPosition((position) => {\r\n\r\n                this.setState({\r\n                    latitude: position.coords.latitude,\r\n                    longitude: position.coords.longitude,\r\n                    error: null,\r\n                });\r\n                console.log(position.coords.latitude)\r\n                console.log(position.coords.longitude)\r\n            },\r\n                // { enableHighAccuracy: true, timeout: 1000, maximumAge: 1000 }\r\n            );\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    // onChangeListItem = (index) => {\r\n    //     let location = this.state.users[index];\r\n    //     this.map.animateToRegion(\r\n    //         {\r\n    //             latitude: location.latitude,\r\n    //             longitude: location.longitude,\r\n    //             latitudeDelta: 0.003,\r\n    //             longitudeDelta: 0.00035\r\n    //         }, 500\r\n    //     )\r\n    // };\r\n\r\n    renderRowusers = ({ item }) => {\r\n        return (\r\n            <TouchableOpacity style={styles.card} >\r\n\r\n                <View>\r\n                    <Image\r\n                        source={{ uri: item.photoURL }}\r\n                        style={{ flex: 1, width: 90, height: 90, resizeMode: 'cover', borderRadius: 7, marginRight: 5 }}\r\n                    />\r\n                </View>\r\n                <View style={{ justifyContent: 'center', marginLeft: 10 }}>\r\n                    <View>\r\n                        <View>\r\n                            <Text style={{ fontSize: 18 }}>{item.displayName}</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\r\n                            <Ionicons name='ios-pin' type='ionicon' size={15} color='#999' />\r\n                            <Text style={styles.textTitle}>  {item.address} ,</Text>\r\n                            <Text style={styles.textTitle}> {item.specialty}</Text>\r\n                        </View>\r\n\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            <Text style={styles.textTitle}> {item.experience}\r\n                                <Text style={{ fontSize: 15, textAlign: 'center', color: '#000' }}>  ${item.hourlyRate}/hr</Text>\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </TouchableOpacity>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        const location = this.props.profile.location;\r\n        const { latitude, longitude } = this.state;\r\n        const location2 = {latitude, longitude};\r\n        return (\r\n            <View style={styles.container}>\r\n                <View style={{ flex: 1 }}>\r\n                    <View style={styles.containerMap}>\r\n                        <TouchableOpacity style={{ flex: 1 }} onPress={() => this.props.navigation.goBack()}>\r\n                            <Ionicons name='ios-arrow-back' size={30} style={styles.location} />\r\n                        </TouchableOpacity>\r\n                        <View>\r\n                            <Ionicons name='ios-funnel' size={25} />\r\n                        </View>\r\n                        <View style={styles.title}>\r\n                            <Text style={{ fontSize: 32, fontWeight: 'bold' }}>Browse</Text>\r\n                        </View>\r\n                    </View>\r\n                    <MapView\r\n                        style={{ flex: 1 }}\r\n                        showsUserLocation\r\n                        followsUserLocation\r\n                        ref={map => this.map = map}\r\n                        initialRegion={{\r\n                            latitude: location ? location.latitude : location2.latitude,\r\n                            longitude: location ? location.longitude : location2.longitude,\r\n                            latitudeDelta: 0.003,\r\n                            longitudeDelta: 0.00035\r\n\r\n                        }}\r\n                    >\r\n                        {\r\n                            this.state.users.map(item => {\r\n                                return (\r\n                                    <MapView.Marker\r\n                                        description={item.address}\r\n                                        key={item.displayName}\r\n                                        title={item.displayName}\r\n                                        pinColor='#1590f0'\r\n                                        coordinate={{\r\n                                            latitude: item.location.latitude,\r\n                                            longitude: item.location.longitude\r\n                                        }}\r\n                                        onPress={() => this.props.navigation.navigate('Profile01', { item })}\r\n                                    >\r\n                                        <View>\r\n                                            <Image\r\n                                                style={{\r\n                                                    width: 45,\r\n                                                    height: 45,\r\n                                                    borderWidth: 1.5,\r\n                                                    borderColor: '#1590f0',\r\n                                                    borderRadius: 50,\r\n                                                }}\r\n                                                source={{ uri: item.photoURL }}\r\n                                            />\r\n                                            {item.online &&\r\n                                                <View style={{\r\n                                                    backgroundColor: '#00ee4e',\r\n                                                    height: 10,\r\n                                                    width: 10,\r\n                                                    borderRadius: 20,\r\n                                                    shadowColor: '#000',\r\n                                                    shadowOpacity: .15,\r\n                                                    shadowOffset: { width: 0, height: 2 },\r\n                                                    elevation: 2,\r\n                                                    alignSelf: 'center',\r\n                                                    position: 'absolute', top: 0,\r\n                                                    left: 0\r\n\r\n                                                }}>\r\n\r\n                                                </View>\r\n                                            }\r\n                                        </View>\r\n                                    </MapView.Marker>\r\n\r\n                                );\r\n                            })\r\n                        }\r\n\r\n                    </MapView>\r\n                    <ScrollView style={{ position: 'absolute', zIndex: 1, bottom: 30 }} >\r\n                        <FlatList\r\n                            horizontal\r\n                            data={this.state.users}\r\n                            renderItem={this.renderRowusers}\r\n                            keyExtractor={(item) => item.uid}\r\n                        />\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\n// define your styles\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n    },\r\n    containerMap: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        flexDirection: 'row',\r\n        marginTop: 30,\r\n        justifyContent: 'space-between',\r\n        marginHorizontal: 15\r\n    },\r\n    title: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: 30,\r\n        marginLeft: 5\r\n    },\r\n    location: {\r\n        flexDirection: 'row',\r\n        textAlign: 'left',\r\n    },\r\n    card: {\r\n        backgroundColor: '#fff',\r\n        marginLeft: 10,\r\n        flexDirection: 'row',\r\n        elevation: 5,\r\n        borderRadius: 7,\r\n        width: Dimensions.get('window').width / 1.2,\r\n        padding: 7\r\n    },\r\n    textTitle: {\r\n        color: '#666',\r\n        fontSize: 15\r\n    }\r\n});\r\n\r\nconst mapStateToProps = ({ authProfile }) => {\r\n    return {\r\n        profile: authProfile.profile\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Map);\r\n"]},"metadata":{},"sourceType":"module"}