{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport firebase from \"../Firebase\";\nimport { SIGNIN_ATTEMPING_DOCTOR, SIGNUP_FAILED_DOCTOR, SIGNIN_SUCCESS_DOCTOR } from \"./type\";\nexport var handelSignUpDoctor = function handelSignUpDoctor(_ref) {\n  var displayName = _ref.displayName,\n      email = _ref.email,\n      password = _ref.password,\n      phone = _ref.phone,\n      photoURL = _ref.photoURL,\n      medicalSchool = _ref.medicalSchool,\n      education = _ref.education,\n      specialty = _ref.specialty,\n      hourlyRate = _ref.hourlyRate,\n      address = _ref.address,\n      experience = _ref.experience,\n      addressSchool = _ref.addressSchool,\n      awards = _ref.awards;\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              dispatch({\n                type: SIGNIN_ATTEMPING_DOCTOR\n              });\n              firebase.auth().createUserWithEmailAndPassword(email, password).then(function (resp) {\n                firebase.database().ref('users/doctors/' + resp.user.uid).set({\n                  displayName: displayName,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                  photoURL: photoURL,\n                  medicalSchool: medicalSchool,\n                  education: education,\n                  specialty: specialty,\n                  hourlyRate: hourlyRate,\n                  address: address,\n                  experience: experience,\n                  addressSchool: addressSchool,\n                  awards: awards,\n                  uid: resp.user.uid\n                }).then(function (resp) {\n                  AsyncStorage.setItem('uid', resp.user.uid);\n                  dispatch({\n                    type: SIGNIN_SUCCESS_DOCTOR,\n                    payload: {\n                      displayName: displayName,\n                      email: email,\n                      password: password,\n                      phone: phone,\n                      photoURL: photoURL,\n                      medicalSchool: medicalSchool,\n                      education: education,\n                      specialty: specialty,\n                      hourlyRate: hourlyRate,\n                      address: address,\n                      experience: experience,\n                      addressSchool: addressSchool,\n                      awards: awards,\n                      uid: resp.user.uid\n                    },\n                    payload2: null\n                  });\n                });\n                firebase.database().ref('specialty/' + specialty + '/' + resp.user.uid).set({\n                  displayName: displayName,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                  photoURL: photoURL,\n                  medicalSchool: medicalSchool,\n                  education: education,\n                  specialty: specialty,\n                  hourlyRate: hourlyRate,\n                  address: address,\n                  experience: experience,\n                  addressSchool: addressSchool,\n                  awards: awards,\n                  uid: resp.user.uid\n                }).then(function (resp) {\n                  AsyncStorage.setItem('uid', resp.user.uid);\n                  dispatch({\n                    type: SIGNIN_SUCCESS_DOCTOR,\n                    payload: {\n                      displayName: displayName,\n                      email: email,\n                      password: password,\n                      phone: phone,\n                      photoURL: photoURL,\n                      medicalSchool: medicalSchool,\n                      education: education,\n                      specialty: specialty,\n                      hourlyRate: hourlyRate,\n                      address: address,\n                      experience: experience,\n                      addressSchool: addressSchool,\n                      awards: awards,\n                      uid: resp.user.uid\n                    },\n                    payload2: null\n                  });\n                });\n              }).catch(function (error) {\n                dispatch({\n                  type: SIGNUP_FAILED_DOCTOR,\n                  error: ''\n                });\n              });\n            } catch (err) {\n              console.log(err);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["E:/react-native/Doctro/actions/authDoctors.js"],"names":["firebase","SIGNIN_ATTEMPING_DOCTOR","SIGNUP_FAILED_DOCTOR","SIGNIN_SUCCESS_DOCTOR","handelSignUpDoctor","displayName","email","password","phone","photoURL","medicalSchool","education","specialty","hourlyRate","address","experience","addressSchool","awards","dispatch","type","auth","createUserWithEmailAndPassword","then","resp","database","ref","user","uid","set","AsyncStorage","setItem","payload","payload2","catch","error","err","console","log"],"mappings":"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","sourcesContent":["import { AsyncStorage } from 'react-native';\r\nimport firebase from '../Firebase';\r\n\r\nimport { \r\n    SIGNIN_ATTEMPING_DOCTOR, \r\n    SIGNUP_FAILED_DOCTOR, \r\n    SIGNIN_SUCCESS_DOCTOR ,\r\n    \r\n} from './type';\r\n\r\n\r\n\r\nexport const handelSignUpDoctor = ({\r\n    displayName,\r\n    email,\r\n    password,\r\n    phone,\r\n    photoURL,\r\n    medicalSchool,\r\n    education,\r\n    specialty,\r\n    hourlyRate,\r\n    address,\r\n    experience,\r\n    addressSchool,\r\n    awards\r\n}) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: SIGNIN_ATTEMPING_DOCTOR })\r\n\r\n\r\n\r\n            firebase.auth().createUserWithEmailAndPassword(email, password).then(resp => {\r\n\r\n\r\n                firebase.database().ref('users/doctors/' + resp.user.uid).set({\r\n                    displayName,\r\n                    email,\r\n                    password,\r\n                    phone,\r\n                    photoURL,\r\n                    medicalSchool,\r\n                    education,\r\n                    specialty,\r\n                    hourlyRate,\r\n                    address,\r\n                    experience,\r\n                    addressSchool,\r\n                    awards,\r\n                    uid: resp.user.uid\r\n                })\r\n                    .then((resp) => {\r\n                        AsyncStorage.setItem('uid', resp.user.uid);\r\n\r\n                        dispatch({\r\n                            type: SIGNIN_SUCCESS_DOCTOR, payload: {\r\n                                displayName,\r\n                                email,\r\n                                password,\r\n                                phone,\r\n                                photoURL,\r\n                                medicalSchool,\r\n                                education,\r\n                                specialty,\r\n                                hourlyRate,\r\n                                address,\r\n                                experience,\r\n                                addressSchool,\r\n                                awards,\r\n                                uid: resp.user.uid\r\n                            }, payload2: null\r\n                        })\r\n                    })\r\n\r\n                        \r\n                firebase.database().ref('specialty/' + specialty + '/' + resp.user.uid ).set({\r\n                    displayName,\r\n                    email,\r\n                    password,\r\n                    phone,\r\n                    photoURL,\r\n                    medicalSchool,\r\n                    education,\r\n                    specialty,\r\n                    hourlyRate,\r\n                    address,\r\n                    experience,\r\n                    addressSchool,\r\n                    awards,\r\n                    uid: resp.user.uid\r\n                })\r\n                    .then((resp) => {\r\n                        AsyncStorage.setItem('uid', resp.user.uid);\r\n\r\n                        dispatch({\r\n                            type: SIGNIN_SUCCESS_DOCTOR, payload: {\r\n                                displayName,\r\n                                email,\r\n                                password,\r\n                                phone,\r\n                                photoURL,\r\n                                medicalSchool,\r\n                                education,\r\n                                specialty,\r\n                                hourlyRate,\r\n                                address,\r\n                                experience,\r\n                                addressSchool,\r\n                                awards,\r\n                                uid: resp.user.uid\r\n                            }, payload2: null\r\n                        })\r\n                    })\r\n            }).catch(error => {\r\n                dispatch({ type: SIGNUP_FAILED_DOCTOR, error: '' })\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n// export const getSpecialtyDoctors = (uid) => {\r\n    \r\n//     return async (dispatch) => {\r\n//         dispatch({ type: GET_SPECIALTY_ATTEMPING });\r\n\r\n//         firebase.database().ref('specialty/' + uid).on('child_added', (snap) => {\r\n//             const specialty = []\r\n\r\n            \r\n//             snap.forEach(value => {\r\n//                 const specialty = value.val();\r\n//                 specialty.id = value.key;\r\n//                 specialty.push(specialty);\r\n//                 console.log(specialty)\r\n//             })\r\n\r\n//             dispatch({ type: GET_SPECIALTY_SUCCESS, payload: specialty });\r\n\r\n//         }).catch (error => {\r\n//             dispatch({ type: GET_SPECIALTY_FAILED, payload: error.message });\r\n//         })\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}